{
  "swagger": "2.0",
  "info": {
    "title": "Minter Node API v2",
    "version": "1.2",
    "contact": {
      "name": "Klimov Sergey",
      "url": "https://klim0v.github.io/",
      "email": "klim0v-sergey@yandex.ru"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/MinterTeam/minter-go-node/blob/master/LICENSE"
    }
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/address/{address}": {
      "get": {
        "summary": "Returns coins list, balance and transaction count of an address.",
        "operationId": "Address",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbAddressResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "delegated",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/addresses": {
      "get": {
        "summary": "Returns list of addresses.",
        "operationId": "Addresses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbAddressesResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "addresses",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "delegated",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/block/{height}": {
      "get": {
        "summary": "Returns block data at given height.",
        "operationId": "Block",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbBlockResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "height",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "transactions",
                "missed",
                "block_reward",
                "size",
                "proposer",
                "validators",
                "evidence"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/candidate/{public_key}": {
      "get": {
        "summary": "Returns candidateâ€™s info by provided public_key. It will respond with 404 code if candidate is not found.",
        "operationId": "Candidate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbCandidateResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "public_key",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/candidates": {
      "get": {
        "summary": "Returns list of candidates.",
        "operationId": "Candidates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbCandidatesResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "height",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "include_stakes",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "_",
              "CandidateOff",
              "CandidateOn",
              "ValidatorOn"
            ],
            "default": "_"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/coin_info/{symbol}": {
      "get": {
        "summary": "Returns information about coin symbol.",
        "operationId": "CoinInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbCoinInfoResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/coin_info_by_id/{id}": {
      "get": {
        "summary": "Returns information about coin ID.",
        "operationId": "CoinInfoById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbCoinInfoResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/estimate_coin_buy": {
      "get": {
        "summary": "Return estimate of buy coin transaction.",
        "operationId": "EstimateCoinBuy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbEstimateCoinBuyResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "coin_id_to_buy",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "coin_to_buy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "coin_id_to_sell",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "coin_to_sell",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "value_to_buy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/estimate_coin_sell": {
      "get": {
        "summary": "Return estimate of sell coin transaction.",
        "operationId": "EstimateCoinSell",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbEstimateCoinSellResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "coin_id_to_buy",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "coin_to_buy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "coin_id_to_sell",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "coin_to_sell",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "value_to_sell",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/estimate_coin_sell_all": {
      "get": {
        "summary": "Return estimate of sell all coin transaction.",
        "operationId": "EstimateCoinSellAll",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbEstimateCoinSellAllResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "coin_id_to_buy",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "coin_to_buy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "coin_id_to_sell",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "coin_to_sell",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "value_to_sell",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "gas_price",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/estimate_tx_commission/{tx}": {
      "get": {
        "summary": "Return estimate of transaction.",
        "operationId": "EstimateTxCommission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbEstimateTxCommissionResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "tx",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/events/{height}": {
      "get": {
        "summary": "Returns events at given height.",
        "operationId": "Events",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbEventsResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "height",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/frozen/{address}": {
      "get": {
        "summary": "Returns frozen balance.",
        "operationId": "Frozen",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbFrozenResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "coin",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/genesis": {
      "get": {
        "summary": "Returns genesis file.",
        "operationId": "Genesis",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbGenesisResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "tags": [
          "ApiService"
        ]
      }
    },
    "/halts": {
      "get": {
        "summary": "Halts",
        "operationId": "Halts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbHaltsResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "height",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/max_gas": {
      "get": {
        "summary": "Returns current max gas.",
        "operationId": "MaxGas",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbMaxGasResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "height",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/min_gas_price": {
      "get": {
        "summary": "Returns current min gas price.",
        "operationId": "MinGasPrice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbMinGasPriceResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "tags": [
          "ApiService"
        ]
      }
    },
    "/missed_blocks/{public_key}": {
      "get": {
        "summary": "Returns missed blocks by validator public key.",
        "operationId": "MissedBlocks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbMissedBlocksResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "public_key",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/net_info": {
      "get": {
        "summary": "Returns network info",
        "operationId": "NetInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbNetInfoResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "tags": [
          "ApiService"
        ]
      }
    },
    "/send_transaction": {
      "post": {
        "summary": "Returns the result of sending signed tx. To ensure that transaction was successfully committed to the blockchain, you need to find the transaction by the hash and ensure that the status code equals to 0.",
        "operationId": "SendTransaction2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbSendTransactionResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api_pbSendTransactionRequest"
            }
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/send_transaction/{tx}": {
      "get": {
        "summary": "Returns the result of sending signed tx. To ensure that transaction was successfully committed to the blockchain, you need to find the transaction by the hash and ensure that the status code equals to 0.",
        "operationId": "SendTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbSendTransactionResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "tx",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/status": {
      "get": {
        "summary": "Returns node status including pubkey, latest block.",
        "operationId": "Status",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbStatusResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "tags": [
          "ApiService"
        ]
      }
    },
    "/subscribe": {
      "get": {
        "summary": "Returns a subscription for events by query.",
        "operationId": "Subscribe",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/api_pbSubscribeResponse"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of api_pbSubscribeResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/transaction/{hash}": {
      "get": {
        "summary": "Returns transaction info.",
        "operationId": "Transaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbTransactionResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/transactions": {
      "get": {
        "summary": "Return transactions by query.",
        "operationId": "Transactions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbTransactionsResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/unconfirmed_txs": {
      "get": {
        "summary": "Returns unconfirmed transactions.",
        "operationId": "UnconfirmedTxs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbUnconfirmedTxsResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/validators": {
      "get": {
        "summary": "Returns list of active validators.",
        "operationId": "Validators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbValidatorsResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "height",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    },
    "/waitlist/{public_key}/{address}": {
      "get": {
        "summary": "Returns the list of address stakes in waitlist.",
        "operationId": "WaitList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/api_pbWaitListResponse"
            }
          },
          "500": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody",
              "example": {
                "error": {
                  "code": "504",
                  "message": "context deadline exceeded"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/api_pbErrorBody"
            }
          }
        },
        "parameters": [
          {
            "name": "public_key",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "ApiService"
        ]
      }
    }
  },
  "definitions": {
    "BlockRequestField": {
      "type": "string",
      "enum": [
        "transactions",
        "missed",
        "block_reward",
        "size",
        "proposer",
        "validators",
        "evidence"
      ],
      "default": "transactions"
    },
    "BlockResponseEvidenceEvidence": {
      "type": "object",
      "properties": {
        "height": {
          "type": "string"
        },
        "time": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "hash": {
          "type": "string"
        }
      }
    },
    "BlockResponseTransaction": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string"
        },
        "raw_tx": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        },
        "gas_price": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/protobufAny"
        },
        "payload": {
          "type": "string",
          "format": "byte"
        },
        "service_data": {
          "type": "string",
          "format": "byte"
        },
        "gas": {
          "type": "string"
        },
        "gas_coin": {
          "type": "string"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "code": {
          "type": "string"
        },
        "log": {
          "type": "string"
        }
      }
    },
    "CandidateResponseStake": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string"
        },
        "coin": {
          "$ref": "#/definitions/api_pbCoin"
        },
        "value": {
          "type": "string"
        },
        "bip_value": {
          "type": "string"
        }
      }
    },
    "ConnectionStatusChannel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "send_queue_capacity": {
          "type": "string"
        },
        "send_queue_size": {
          "type": "string"
        },
        "priority": {
          "type": "string"
        },
        "recently_sent": {
          "type": "string"
        }
      }
    },
    "ConnectionStatusMonitor": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "start": {
          "type": "string"
        },
        "duration": {
          "type": "string"
        },
        "idle": {
          "type": "string"
        },
        "bytes": {
          "type": "string"
        },
        "samples": {
          "type": "string"
        },
        "inst_rate": {
          "type": "string"
        },
        "cur_rate": {
          "type": "string"
        },
        "avg_rate": {
          "type": "string"
        },
        "peak_rate": {
          "type": "string"
        },
        "bytes_rem": {
          "type": "string"
        },
        "time_rem": {
          "type": "string"
        },
        "progress": {
          "type": "string"
        }
      }
    },
    "ConsensusParamsBlock": {
      "type": "object",
      "properties": {
        "max_bytes": {
          "type": "string"
        },
        "max_gas": {
          "type": "string"
        },
        "time_iota_ms": {
          "type": "string"
        }
      }
    },
    "FrozenResponseFrozen": {
      "type": "object",
      "properties": {
        "height": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "candidate_key": {
          "type": "string"
        },
        "coin": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "GenesisResponseConsensusParams": {
      "type": "object",
      "properties": {
        "block": {
          "$ref": "#/definitions/ConsensusParamsBlock"
        },
        "evidence": {
          "$ref": "#/definitions/GenesisResponseConsensusParamsEvidence"
        },
        "validator": {
          "$ref": "#/definitions/GenesisResponseConsensusParamsValidator"
        }
      }
    },
    "GenesisResponseConsensusParamsEvidence": {
      "type": "object",
      "properties": {
        "max_age_num_blocks": {
          "type": "string"
        },
        "max_age_duration": {
          "type": "string"
        }
      }
    },
    "GenesisResponseConsensusParamsValidator": {
      "type": "object",
      "properties": {
        "pub_key_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NetInfoResponsePeer": {
      "type": "object",
      "properties": {
        "latest_block_height": {
          "type": "string"
        },
        "node_info": {
          "$ref": "#/definitions/api_pbNodeInfo"
        },
        "is_outbound": {
          "type": "boolean"
        },
        "connection_status": {
          "$ref": "#/definitions/PeerConnectionStatus"
        },
        "remote_ip": {
          "type": "string"
        }
      }
    },
    "NodeInfoOther": {
      "type": "object",
      "properties": {
        "tx_index": {
          "type": "string"
        },
        "rpc_address": {
          "type": "string"
        }
      }
    },
    "NodeInfoProtocolVersion": {
      "type": "object",
      "properties": {
        "p2p": {
          "type": "string"
        },
        "block": {
          "type": "string"
        },
        "app": {
          "type": "string"
        }
      }
    },
    "PeerConnectionStatus": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "string"
        },
        "SendMonitor": {
          "$ref": "#/definitions/ConnectionStatusMonitor"
        },
        "RecvMonitor": {
          "$ref": "#/definitions/ConnectionStatusMonitor"
        },
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectionStatusChannel"
          }
        }
      }
    },
    "WaitListResponseWait": {
      "type": "object",
      "properties": {
        "coin": {
          "$ref": "#/definitions/api_pbCoin"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "api_pbAddressBalance": {
      "type": "object",
      "properties": {
        "coin": {
          "$ref": "#/definitions/api_pbCoin"
        },
        "value": {
          "type": "string"
        },
        "bip_value": {
          "type": "string"
        }
      }
    },
    "api_pbAddressDelegatedBalance": {
      "type": "object",
      "properties": {
        "coin": {
          "$ref": "#/definitions/api_pbCoin"
        },
        "value": {
          "type": "string"
        },
        "bip_value": {
          "type": "string"
        },
        "delegate_bip_value": {
          "type": "string"
        }
      }
    },
    "api_pbAddressResponse": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api_pbAddressBalance"
          }
        },
        "delegated": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api_pbAddressDelegatedBalance"
          }
        },
        "total": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api_pbAddressBalance"
          }
        },
        "transaction_count": {
          "type": "string"
        },
        "bip_value": {
          "type": "string"
        }
      }
    },
    "api_pbAddressesResponse": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/api_pbAddressesResponseResult"
          }
        }
      }
    },
    "api_pbAddressesResponseResult": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api_pbAddressBalance"
          }
        },
        "delegated": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api_pbAddressDelegatedBalance"
          }
        },
        "total": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api_pbAddressBalance"
          }
        },
        "transaction_count": {
          "type": "string"
        },
        "bip_value": {
          "type": "string"
        }
      }
    },
    "api_pbBlockResponse": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string"
        },
        "height": {
          "type": "string"
        },
        "time": {
          "type": "string"
        },
        "transaction_count": {
          "type": "string"
        },
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlockResponseTransaction"
          }
        },
        "block_reward": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "proposer": {
          "type": "string"
        },
        "validators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api_pbBlockResponseValidator"
          }
        },
        "evidence": {
          "$ref": "#/definitions/api_pbBlockResponseEvidence"
        },
        "missed": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "api_pbBlockResponseEvidence": {
      "type": "object",
      "properties": {
        "evidence": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlockResponseEvidenceEvidence"
          }
        }
      }
    },
    "api_pbBlockResponseValidator": {
      "type": "object",
      "properties": {
        "public_key": {
          "type": "string"
        },
        "signed": {
          "type": "boolean"
        }
      }
    },
    "api_pbCandidateResponse": {
      "type": "object",
      "properties": {
        "reward_address": {
          "type": "string"
        },
        "owner_address": {
          "type": "string"
        },
        "control_address": {
          "type": "string"
        },
        "total_stake": {
          "type": "string"
        },
        "public_key": {
          "type": "string"
        },
        "commission": {
          "type": "string"
        },
        "used_slots": {
          "type": "string"
        },
        "uniq_users": {
          "type": "string"
        },
        "min_stake": {
          "type": "string"
        },
        "stakes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CandidateResponseStake"
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "api_pbCandidateStatus": {
      "type": "string",
      "enum": [
        "_",
        "CandidateOff",
        "CandidateOn",
        "ValidatorOn"
      ],
      "default": "_"
    },
    "api_pbCandidatesResponse": {
      "type": "object",
      "properties": {
        "candidates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api_pbCandidateResponse"
          }
        }
      }
    },
    "api_pbCoin": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "symbol": {
          "type": "string"
        }
      }
    },
    "api_pbCoinInfoResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "symbol": {
          "type": "string"
        },
        "volume": {
          "type": "string"
        },
        "crr": {
          "type": "string"
        },
        "reserve_balance": {
          "type": "string"
        },
        "max_supply": {
          "type": "string"
        },
        "owner_address": {
          "type": "string"
        }
      }
    },
    "api_pbErrorBody": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/api_pbErrorBodyError"
        }
      }
    },
    "api_pbErrorBodyError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "api_pbEstimateCoinBuyResponse": {
      "type": "object",
      "properties": {
        "will_pay": {
          "type": "string"
        },
        "commission": {
          "type": "string"
        }
      }
    },
    "api_pbEstimateCoinSellAllResponse": {
      "type": "object",
      "properties": {
        "will_get": {
          "type": "string"
        }
      }
    },
    "api_pbEstimateCoinSellResponse": {
      "type": "object",
      "properties": {
        "will_get": {
          "type": "string"
        },
        "commission": {
          "type": "string"
        }
      }
    },
    "api_pbEstimateTxCommissionResponse": {
      "type": "object",
      "properties": {
        "commission": {
          "type": "string"
        }
      }
    },
    "api_pbEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api_pbEventsResponseEvent"
          }
        }
      }
    },
    "api_pbEventsResponseEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "value": {
          "type": "object"
        }
      }
    },
    "api_pbFrozenResponse": {
      "type": "object",
      "properties": {
        "frozen": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FrozenResponseFrozen"
          }
        }
      }
    },
    "api_pbGenesisResponse": {
      "type": "object",
      "properties": {
        "genesis_time": {
          "type": "string"
        },
        "chain_id": {
          "type": "string"
        },
        "consensus_params": {
          "$ref": "#/definitions/GenesisResponseConsensusParams"
        },
        "app_hash": {
          "type": "string"
        },
        "app_state": {
          "type": "object"
        }
      }
    },
    "api_pbHaltsResponse": {
      "type": "object",
      "properties": {
        "votes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "api_pbMaxGasResponse": {
      "type": "object",
      "properties": {
        "max_gas": {
          "type": "string"
        }
      }
    },
    "api_pbMinGasPriceResponse": {
      "type": "object",
      "properties": {
        "min_gas_price": {
          "type": "string"
        }
      }
    },
    "api_pbMissedBlocksResponse": {
      "type": "object",
      "properties": {
        "missed_blocks": {
          "type": "string"
        },
        "missed_blocks_count": {
          "type": "string"
        }
      }
    },
    "api_pbNetInfoResponse": {
      "type": "object",
      "properties": {
        "listening": {
          "type": "boolean"
        },
        "listeners": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "count_peers": {
          "type": "string"
        },
        "peers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetInfoResponsePeer"
          }
        }
      }
    },
    "api_pbNodeInfo": {
      "type": "object",
      "properties": {
        "protocol_version": {
          "$ref": "#/definitions/NodeInfoProtocolVersion"
        },
        "id": {
          "type": "string"
        },
        "listen_addr": {
          "type": "string"
        },
        "network": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "channels": {
          "type": "string"
        },
        "moniker": {
          "type": "string"
        },
        "other": {
          "$ref": "#/definitions/NodeInfoOther"
        }
      }
    },
    "api_pbSendTransactionRequest": {
      "type": "object",
      "properties": {
        "tx": {
          "type": "string"
        }
      }
    },
    "api_pbSendTransactionResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "log": {
          "type": "string"
        },
        "hash": {
          "type": "string"
        }
      }
    },
    "api_pbStatusResponse": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "latest_block_hash": {
          "type": "string"
        },
        "latest_app_hash": {
          "type": "string"
        },
        "latest_block_height": {
          "type": "string"
        },
        "latest_block_time": {
          "type": "string"
        },
        "keep_last_states": {
          "type": "string"
        },
        "total_slashed": {
          "type": "string"
        },
        "catching_up": {
          "type": "boolean"
        },
        "public_key": {
          "type": "string"
        },
        "node_id": {
          "type": "string"
        }
      }
    },
    "api_pbSubscribeResponse": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api_pbSubscribeResponseEvent"
          }
        }
      }
    },
    "api_pbSubscribeResponseEvent": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "api_pbTransactionResponse": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string"
        },
        "raw_tx": {
          "type": "string"
        },
        "height": {
          "type": "string"
        },
        "index": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        },
        "gas": {
          "type": "string"
        },
        "gas_price": {
          "type": "string"
        },
        "gas_coin": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/protobufAny"
        },
        "payload": {
          "type": "string",
          "format": "byte"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "code": {
          "type": "string"
        },
        "log": {
          "type": "string"
        }
      }
    },
    "api_pbTransactionsResponse": {
      "type": "object",
      "properties": {
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api_pbTransactionResponse"
          }
        }
      }
    },
    "api_pbUnconfirmedTxsResponse": {
      "type": "object",
      "properties": {
        "transaction_count": {
          "type": "string"
        },
        "total_transactions": {
          "type": "string"
        },
        "total_bytes": {
          "type": "string"
        },
        "transactions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "api_pbValidatorsResponse": {
      "type": "object",
      "properties": {
        "validators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api_pbValidatorsResponseResult"
          }
        }
      }
    },
    "api_pbValidatorsResponseResult": {
      "type": "object",
      "properties": {
        "public_key": {
          "type": "string"
        },
        "voting_power": {
          "type": "string"
        }
      }
    },
    "api_pbWaitListResponse": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WaitListResponseWait"
          }
        }
      }
    },
    "gatewayruntimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "runtimeStreamError": {
      "type": "object",
      "properties": {
        "grpc_code": {
          "type": "integer",
          "format": "int32"
        },
        "http_code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "http_status": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}

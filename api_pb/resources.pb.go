// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: resources.proto

package api_pb

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type BlockRequest_Field int32

const (
	BlockRequest_transactions BlockRequest_Field = 0
	BlockRequest_missed       BlockRequest_Field = 1
	BlockRequest_block_reward BlockRequest_Field = 2
	BlockRequest_size         BlockRequest_Field = 3
	BlockRequest_proposer     BlockRequest_Field = 4
	BlockRequest_validators   BlockRequest_Field = 5
	BlockRequest_evidence     BlockRequest_Field = 6
)

// Enum value maps for BlockRequest_Field.
var (
	BlockRequest_Field_name = map[int32]string{
		0: "transactions",
		1: "missed",
		2: "block_reward",
		3: "size",
		4: "proposer",
		5: "validators",
		6: "evidence",
	}
	BlockRequest_Field_value = map[string]int32{
		"transactions": 0,
		"missed":       1,
		"block_reward": 2,
		"size":         3,
		"proposer":     4,
		"validators":   5,
		"evidence":     6,
	}
)

func (x BlockRequest_Field) Enum() *BlockRequest_Field {
	p := new(BlockRequest_Field)
	*p = x
	return p
}

func (x BlockRequest_Field) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockRequest_Field) Descriptor() protoreflect.EnumDescriptor {
	return file_resources_proto_enumTypes[0].Descriptor()
}

func (BlockRequest_Field) Type() protoreflect.EnumType {
	return &file_resources_proto_enumTypes[0]
}

func (x BlockRequest_Field) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockRequest_Field.Descriptor instead.
func (BlockRequest_Field) EnumDescriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{11, 0}
}

type CandidatesRequest_CandidateStatus int32

const (
	CandidatesRequest_all CandidatesRequest_CandidateStatus = 0
	CandidatesRequest_off CandidatesRequest_CandidateStatus = 1
	CandidatesRequest_on  CandidatesRequest_CandidateStatus = 2
)

// Enum value maps for CandidatesRequest_CandidateStatus.
var (
	CandidatesRequest_CandidateStatus_name = map[int32]string{
		0: "all",
		1: "off",
		2: "on",
	}
	CandidatesRequest_CandidateStatus_value = map[string]int32{
		"all": 0,
		"off": 1,
		"on":  2,
	}
)

func (x CandidatesRequest_CandidateStatus) Enum() *CandidatesRequest_CandidateStatus {
	p := new(CandidatesRequest_CandidateStatus)
	*p = x
	return p
}

func (x CandidatesRequest_CandidateStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CandidatesRequest_CandidateStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_resources_proto_enumTypes[1].Descriptor()
}

func (CandidatesRequest_CandidateStatus) Type() protoreflect.EnumType {
	return &file_resources_proto_enumTypes[1]
}

func (x CandidatesRequest_CandidateStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CandidatesRequest_CandidateStatus.Descriptor instead.
func (CandidatesRequest_CandidateStatus) EnumDescriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{23, 0}
}

type Coin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Symbol string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *Coin) Reset() {
	*x = Coin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin) ProtoMessage() {}

func (x *Coin) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin.ProtoReflect.Descriptor instead.
func (*Coin) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{0}
}

func (x *Coin) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Coin) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type PairsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pairs []*PairsResponse_Pair `protobuf:"bytes,1,rep,name=pairs,proto3" json:"pairs,omitempty"`
}

func (x *PairsResponse) Reset() {
	*x = PairsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PairsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PairsResponse) ProtoMessage() {}

func (x *PairsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PairsResponse.ProtoReflect.Descriptor instead.
func (*PairsResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{1}
}

func (x *PairsResponse) GetPairs() []*PairsResponse_Pair {
	if x != nil {
		return x.Pairs
	}
	return nil
}

type PairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin0 uint64 `protobuf:"varint,1,opt,name=coin0,proto3" json:"coin0,omitempty"`
	Coin1 uint64 `protobuf:"varint,2,opt,name=coin1,proto3" json:"coin1,omitempty"`
}

func (x *PairRequest) Reset() {
	*x = PairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PairRequest) ProtoMessage() {}

func (x *PairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PairRequest.ProtoReflect.Descriptor instead.
func (*PairRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{2}
}

func (x *PairRequest) GetCoin0() uint64 {
	if x != nil {
		return x.Coin0
	}
	return 0
}

func (x *PairRequest) GetCoin1() uint64 {
	if x != nil {
		return x.Coin1
	}
	return 0
}

type PairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reserve0    string `protobuf:"bytes,1,opt,name=reserve0,proto3" json:"reserve0,omitempty"`
	Reserve1    string `protobuf:"bytes,2,opt,name=reserve1,proto3" json:"reserve1,omitempty"`
	TotalSupply string `protobuf:"bytes,3,opt,name=total_supply,json=totalSupply,proto3" json:"total_supply,omitempty"`
}

func (x *PairResponse) Reset() {
	*x = PairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PairResponse) ProtoMessage() {}

func (x *PairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PairResponse.ProtoReflect.Descriptor instead.
func (*PairResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{3}
}

func (x *PairResponse) GetReserve0() string {
	if x != nil {
		return x.Reserve0
	}
	return ""
}

func (x *PairResponse) GetReserve1() string {
	if x != nil {
		return x.Reserve1
	}
	return ""
}

func (x *PairResponse) GetTotalSupply() string {
	if x != nil {
		return x.TotalSupply
	}
	return ""
}

type PairFromProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin0    uint64 `protobuf:"varint,1,opt,name=coin0,proto3" json:"coin0,omitempty"`
	Coin1    uint64 `protobuf:"varint,2,opt,name=coin1,proto3" json:"coin1,omitempty"`
	Provider string `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *PairFromProviderRequest) Reset() {
	*x = PairFromProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PairFromProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PairFromProviderRequest) ProtoMessage() {}

func (x *PairFromProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PairFromProviderRequest.ProtoReflect.Descriptor instead.
func (*PairFromProviderRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{4}
}

func (x *PairFromProviderRequest) GetCoin0() uint64 {
	if x != nil {
		return x.Coin0
	}
	return 0
}

func (x *PairFromProviderRequest) GetCoin1() uint64 {
	if x != nil {
		return x.Coin1
	}
	return 0
}

func (x *PairFromProviderRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type PairFromProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reserve0 string `protobuf:"bytes,1,opt,name=reserve0,proto3" json:"reserve0,omitempty"`
	Reserve1 string `protobuf:"bytes,2,opt,name=reserve1,proto3" json:"reserve1,omitempty"`
	Balance  string `protobuf:"bytes,3,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *PairFromProviderResponse) Reset() {
	*x = PairFromProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PairFromProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PairFromProviderResponse) ProtoMessage() {}

func (x *PairFromProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PairFromProviderResponse.ProtoReflect.Descriptor instead.
func (*PairFromProviderResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{5}
}

func (x *PairFromProviderResponse) GetReserve0() string {
	if x != nil {
		return x.Reserve0
	}
	return ""
}

func (x *PairFromProviderResponse) GetReserve1() string {
	if x != nil {
		return x.Reserve1
	}
	return ""
}

func (x *PairFromProviderResponse) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

type NodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtocolVersion *NodeInfo_ProtocolVersion `protobuf:"bytes,8,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	Id              string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ListenAddr      string                    `protobuf:"bytes,2,opt,name=listen_addr,json=listenAddr,proto3" json:"listen_addr,omitempty"`
	Network         string                    `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
	Version         string                    `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Channels        string                    `protobuf:"bytes,5,opt,name=channels,proto3" json:"channels,omitempty"`
	Moniker         string                    `protobuf:"bytes,6,opt,name=moniker,proto3" json:"moniker,omitempty"`
	Other           *NodeInfo_Other           `protobuf:"bytes,7,opt,name=other,proto3" json:"other,omitempty"`
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{6}
}

func (x *NodeInfo) GetProtocolVersion() *NodeInfo_ProtocolVersion {
	if x != nil {
		return x.ProtocolVersion
	}
	return nil
}

func (x *NodeInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NodeInfo) GetListenAddr() string {
	if x != nil {
		return x.ListenAddr
	}
	return ""
}

func (x *NodeInfo) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *NodeInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *NodeInfo) GetChannels() string {
	if x != nil {
		return x.Channels
	}
	return ""
}

func (x *NodeInfo) GetMoniker() string {
	if x != nil {
		return x.Moniker
	}
	return ""
}

func (x *NodeInfo) GetOther() *NodeInfo_Other {
	if x != nil {
		return x.Other
	}
	return nil
}

type NetInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listening  bool                    `protobuf:"varint,4,opt,name=listening,proto3" json:"listening,omitempty"`
	Listeners  []string                `protobuf:"bytes,1,rep,name=listeners,proto3" json:"listeners,omitempty"`
	CountPeers int64                   `protobuf:"varint,2,opt,name=count_peers,json=countPeers,proto3" json:"count_peers,omitempty"`
	Peers      []*NetInfoResponse_Peer `protobuf:"bytes,3,rep,name=peers,proto3" json:"peers,omitempty"`
}

func (x *NetInfoResponse) Reset() {
	*x = NetInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetInfoResponse) ProtoMessage() {}

func (x *NetInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetInfoResponse.ProtoReflect.Descriptor instead.
func (*NetInfoResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{7}
}

func (x *NetInfoResponse) GetListening() bool {
	if x != nil {
		return x.Listening
	}
	return false
}

func (x *NetInfoResponse) GetListeners() []string {
	if x != nil {
		return x.Listeners
	}
	return nil
}

func (x *NetInfoResponse) GetCountPeers() int64 {
	if x != nil {
		return x.CountPeers
	}
	return 0
}

func (x *NetInfoResponse) GetPeers() []*NetInfoResponse_Peer {
	if x != nil {
		return x.Peers
	}
	return nil
}

type StatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version           string `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`
	Network           string `protobuf:"bytes,11,opt,name=network,proto3" json:"network,omitempty"`
	LatestBlockHash   string `protobuf:"bytes,1,opt,name=latest_block_hash,json=latestBlockHash,proto3" json:"latest_block_hash,omitempty"`
	LatestAppHash     string `protobuf:"bytes,2,opt,name=latest_app_hash,json=latestAppHash,proto3" json:"latest_app_hash,omitempty"`
	LatestBlockHeight uint64 `protobuf:"varint,3,opt,name=latest_block_height,json=latestBlockHeight,proto3" json:"latest_block_height,omitempty"`
	LatestBlockTime   string `protobuf:"bytes,4,opt,name=latest_block_time,json=latestBlockTime,proto3" json:"latest_block_time,omitempty"`
	KeepLastStates    uint64 `protobuf:"varint,5,opt,name=keep_last_states,json=keepLastStates,proto3" json:"keep_last_states,omitempty"`
	TotalSlashed      string `protobuf:"bytes,10,opt,name=total_slashed,json=totalSlashed,proto3" json:"total_slashed,omitempty"`
	CatchingUp        bool   `protobuf:"varint,6,opt,name=catching_up,json=catchingUp,proto3" json:"catching_up,omitempty"`
	PublicKey         string `protobuf:"bytes,7,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	NodeId            string `protobuf:"bytes,9,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{8}
}

func (x *StatusResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *StatusResponse) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *StatusResponse) GetLatestBlockHash() string {
	if x != nil {
		return x.LatestBlockHash
	}
	return ""
}

func (x *StatusResponse) GetLatestAppHash() string {
	if x != nil {
		return x.LatestAppHash
	}
	return ""
}

func (x *StatusResponse) GetLatestBlockHeight() uint64 {
	if x != nil {
		return x.LatestBlockHeight
	}
	return 0
}

func (x *StatusResponse) GetLatestBlockTime() string {
	if x != nil {
		return x.LatestBlockTime
	}
	return ""
}

func (x *StatusResponse) GetKeepLastStates() uint64 {
	if x != nil {
		return x.KeepLastStates
	}
	return 0
}

func (x *StatusResponse) GetTotalSlashed() string {
	if x != nil {
		return x.TotalSlashed
	}
	return ""
}

func (x *StatusResponse) GetCatchingUp() bool {
	if x != nil {
		return x.CatchingUp
	}
	return false
}

func (x *StatusResponse) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *StatusResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type GenesisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GenesisTime     string                           `protobuf:"bytes,1,opt,name=genesis_time,json=genesisTime,proto3" json:"genesis_time,omitempty"`
	ChainId         string                           `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	ConsensusParams *GenesisResponse_ConsensusParams `protobuf:"bytes,3,opt,name=consensus_params,json=consensusParams,proto3" json:"consensus_params,omitempty"`
	AppHash         string                           `protobuf:"bytes,4,opt,name=app_hash,json=appHash,proto3" json:"app_hash,omitempty"`
	AppState        *GenesisResponse_AppState        `protobuf:"bytes,5,opt,name=app_state,json=appState,proto3" json:"app_state,omitempty"`
}

func (x *GenesisResponse) Reset() {
	*x = GenesisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisResponse) ProtoMessage() {}

func (x *GenesisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisResponse.ProtoReflect.Descriptor instead.
func (*GenesisResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{9}
}

func (x *GenesisResponse) GetGenesisTime() string {
	if x != nil {
		return x.GenesisTime
	}
	return ""
}

func (x *GenesisResponse) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *GenesisResponse) GetConsensusParams() *GenesisResponse_ConsensusParams {
	if x != nil {
		return x.ConsensusParams
	}
	return nil
}

func (x *GenesisResponse) GetAppHash() string {
	if x != nil {
		return x.AppHash
	}
	return ""
}

func (x *GenesisResponse) GetAppState() *GenesisResponse_AppState {
	if x != nil {
		return x.AppState
	}
	return nil
}

type MinGasPriceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinGasPrice uint64 `protobuf:"varint,3,opt,name=min_gas_price,json=minGasPrice,proto3" json:"min_gas_price,omitempty"`
}

func (x *MinGasPriceResponse) Reset() {
	*x = MinGasPriceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinGasPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinGasPriceResponse) ProtoMessage() {}

func (x *MinGasPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinGasPriceResponse.ProtoReflect.Descriptor instead.
func (*MinGasPriceResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{10}
}

func (x *MinGasPriceResponse) GetMinGasPrice() uint64 {
	if x != nil {
		return x.MinGasPrice
	}
	return 0
}

type BlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint64               `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Fields []BlockRequest_Field `protobuf:"varint,2,rep,packed,name=fields,proto3,enum=api_pb.BlockRequest_Field" json:"fields,omitempty"`
}

func (x *BlockRequest) Reset() {
	*x = BlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockRequest) ProtoMessage() {}

func (x *BlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockRequest.ProtoReflect.Descriptor instead.
func (*BlockRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{11}
}

func (x *BlockRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *BlockRequest) GetFields() []BlockRequest_Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

type BlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash             string                       `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Height           uint64                       `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Time             string                       `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	TransactionCount uint64                       `protobuf:"varint,4,opt,name=transaction_count,json=transactionCount,proto3" json:"transaction_count,omitempty"`
	Transactions     []*BlockResponse_Transaction `protobuf:"bytes,6,rep,name=transactions,proto3" json:"transactions,omitempty"`
	BlockReward      string                       `protobuf:"bytes,7,opt,name=block_reward,json=blockReward,proto3" json:"block_reward,omitempty"`
	Size             uint64                       `protobuf:"varint,8,opt,name=size,proto3" json:"size,omitempty"`
	Proposer         string                       `protobuf:"bytes,9,opt,name=proposer,proto3" json:"proposer,omitempty"`
	Validators       []*BlockResponse_Validator   `protobuf:"bytes,10,rep,name=validators,proto3" json:"validators,omitempty"`
	Evidence         *BlockResponse_Evidence      `protobuf:"bytes,13,opt,name=evidence,proto3" json:"evidence,omitempty"`
	Missed           []string                     `protobuf:"bytes,12,rep,name=missed,proto3" json:"missed,omitempty"`
}

func (x *BlockResponse) Reset() {
	*x = BlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockResponse) ProtoMessage() {}

func (x *BlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockResponse.ProtoReflect.Descriptor instead.
func (*BlockResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{12}
}

func (x *BlockResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *BlockResponse) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *BlockResponse) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *BlockResponse) GetTransactionCount() uint64 {
	if x != nil {
		return x.TransactionCount
	}
	return 0
}

func (x *BlockResponse) GetTransactions() []*BlockResponse_Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *BlockResponse) GetBlockReward() string {
	if x != nil {
		return x.BlockReward
	}
	return ""
}

func (x *BlockResponse) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *BlockResponse) GetProposer() string {
	if x != nil {
		return x.Proposer
	}
	return ""
}

func (x *BlockResponse) GetValidators() []*BlockResponse_Validator {
	if x != nil {
		return x.Validators
	}
	return nil
}

func (x *BlockResponse) GetEvidence() *BlockResponse_Evidence {
	if x != nil {
		return x.Evidence
	}
	return nil
}

func (x *BlockResponse) GetMissed() []string {
	if x != nil {
		return x.Missed
	}
	return nil
}

type MaxGasPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *MaxGasPriceRequest) Reset() {
	*x = MaxGasPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxGasPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxGasPriceRequest) ProtoMessage() {}

func (x *MaxGasPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxGasPriceRequest.ProtoReflect.Descriptor instead.
func (*MaxGasPriceRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{13}
}

func (x *MaxGasPriceRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type MaxGasPriceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxGasPrice uint64 `protobuf:"varint,3,opt,name=max_gas_price,json=maxGasPrice,proto3" json:"max_gas_price,omitempty"`
}

func (x *MaxGasPriceResponse) Reset() {
	*x = MaxGasPriceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaxGasPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaxGasPriceResponse) ProtoMessage() {}

func (x *MaxGasPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaxGasPriceResponse.ProtoReflect.Descriptor instead.
func (*MaxGasPriceResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{14}
}

func (x *MaxGasPriceResponse) GetMaxGasPrice() uint64 {
	if x != nil {
		return x.MaxGasPrice
	}
	return 0
}

type AddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Height    uint64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Delegated bool   `protobuf:"varint,4,opt,name=delegated,proto3" json:"delegated,omitempty"`
}

func (x *AddressRequest) Reset() {
	*x = AddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressRequest) ProtoMessage() {}

func (x *AddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressRequest.ProtoReflect.Descriptor instead.
func (*AddressRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{15}
}

func (x *AddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddressRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *AddressRequest) GetDelegated() bool {
	if x != nil {
		return x.Delegated
	}
	return false
}

type AddressBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin     *Coin  `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
	Value    string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	BipValue string `protobuf:"bytes,3,opt,name=bip_value,json=bipValue,proto3" json:"bip_value,omitempty"`
}

func (x *AddressBalance) Reset() {
	*x = AddressBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressBalance) ProtoMessage() {}

func (x *AddressBalance) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressBalance.ProtoReflect.Descriptor instead.
func (*AddressBalance) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{16}
}

func (x *AddressBalance) GetCoin() *Coin {
	if x != nil {
		return x.Coin
	}
	return nil
}

func (x *AddressBalance) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AddressBalance) GetBipValue() string {
	if x != nil {
		return x.BipValue
	}
	return ""
}

type AddressDelegatedBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin             *Coin  `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
	Value            string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	BipValue         string `protobuf:"bytes,3,opt,name=bip_value,json=bipValue,proto3" json:"bip_value,omitempty"`
	DelegateBipValue string `protobuf:"bytes,4,opt,name=delegate_bip_value,json=delegateBipValue,proto3" json:"delegate_bip_value,omitempty"`
}

func (x *AddressDelegatedBalance) Reset() {
	*x = AddressDelegatedBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressDelegatedBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressDelegatedBalance) ProtoMessage() {}

func (x *AddressDelegatedBalance) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressDelegatedBalance.ProtoReflect.Descriptor instead.
func (*AddressDelegatedBalance) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{17}
}

func (x *AddressDelegatedBalance) GetCoin() *Coin {
	if x != nil {
		return x.Coin
	}
	return nil
}

func (x *AddressDelegatedBalance) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AddressDelegatedBalance) GetBipValue() string {
	if x != nil {
		return x.BipValue
	}
	return ""
}

func (x *AddressDelegatedBalance) GetDelegateBipValue() string {
	if x != nil {
		return x.DelegateBipValue
	}
	return ""
}

type AddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance          []*AddressBalance          `protobuf:"bytes,1,rep,name=balance,proto3" json:"balance,omitempty"`
	Delegated        []*AddressDelegatedBalance `protobuf:"bytes,3,rep,name=delegated,proto3" json:"delegated,omitempty"`
	Total            []*AddressBalance          `protobuf:"bytes,4,rep,name=total,proto3" json:"total,omitempty"`
	TransactionCount uint64                     `protobuf:"varint,2,opt,name=transaction_count,json=transactionCount,proto3" json:"transaction_count,omitempty"`
	BipValue         string                     `protobuf:"bytes,5,opt,name=bip_value,json=bipValue,proto3" json:"bip_value,omitempty"`
}

func (x *AddressResponse) Reset() {
	*x = AddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressResponse) ProtoMessage() {}

func (x *AddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressResponse.ProtoReflect.Descriptor instead.
func (*AddressResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{18}
}

func (x *AddressResponse) GetBalance() []*AddressBalance {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *AddressResponse) GetDelegated() []*AddressDelegatedBalance {
	if x != nil {
		return x.Delegated
	}
	return nil
}

func (x *AddressResponse) GetTotal() []*AddressBalance {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *AddressResponse) GetTransactionCount() uint64 {
	if x != nil {
		return x.TransactionCount
	}
	return 0
}

func (x *AddressResponse) GetBipValue() string {
	if x != nil {
		return x.BipValue
	}
	return ""
}

type AddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	Height    uint64   `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Delegated bool     `protobuf:"varint,4,opt,name=delegated,proto3" json:"delegated,omitempty"`
}

func (x *AddressesRequest) Reset() {
	*x = AddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressesRequest) ProtoMessage() {}

func (x *AddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressesRequest.ProtoReflect.Descriptor instead.
func (*AddressesRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{19}
}

func (x *AddressesRequest) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *AddressesRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *AddressesRequest) GetDelegated() bool {
	if x != nil {
		return x.Delegated
	}
	return false
}

type AddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses map[string]*AddressesResponse_Result `protobuf:"bytes,3,rep,name=addresses,proto3" json:"addresses,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AddressesResponse) Reset() {
	*x = AddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressesResponse) ProtoMessage() {}

func (x *AddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressesResponse.ProtoReflect.Descriptor instead.
func (*AddressesResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{20}
}

func (x *AddressesResponse) GetAddresses() map[string]*AddressesResponse_Result {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type CandidateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Public key of a candidate
	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// Blockchain state height for the current request. Optional, the last default state of the node is used
	Height uint64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// Do not display a list of steaks. Note: used_slots, uniq_users, min_stake will be filled
	NotShowStakes bool `protobuf:"varint,4,opt,name=not_show_stakes,json=notShowStakes,proto3" json:"not_show_stakes,omitempty"`
}

func (x *CandidateRequest) Reset() {
	*x = CandidateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CandidateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CandidateRequest) ProtoMessage() {}

func (x *CandidateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CandidateRequest.ProtoReflect.Descriptor instead.
func (*CandidateRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{21}
}

func (x *CandidateRequest) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *CandidateRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *CandidateRequest) GetNotShowStakes() bool {
	if x != nil {
		return x.NotShowStakes
	}
	return false
}

type CandidateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address where validator’s rewards go to.
	RewardAddress string `protobuf:"bytes,1,opt,name=reward_address,json=rewardAddress,proto3" json:"reward_address,omitempty"`
	// Address that allows one to start the candidate by sending the SetCandidateOnline transaction or stop it by sending the SetCandidateOffline transaction. It also enables the owner to edit the node by sending EditCandidate.
	OwnerAddress string `protobuf:"bytes,10,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	// Address that allows one to start the candidate by sending the SetCandidateOnline transaction or stop it by sending the SetCandidateOffline transaction.
	ControlAddress string `protobuf:"bytes,11,opt,name=control_address,json=controlAddress,proto3" json:"control_address,omitempty"`
	// Total stake of a candidate
	TotalStake string `protobuf:"bytes,2,opt,name=total_stake,json=totalStake,proto3" json:"total_stake,omitempty"`
	// Public key of a candidate
	PublicKey string `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// Commission (from 0 to 100) from rewards which delegators will pay to validator
	Commission uint64 `protobuf:"varint,4,opt,name=commission,proto3" json:"commission,omitempty"`
	// Number of occupied steak slots. Note: filled in when request includes_stakes
	UsedSlots *wrapperspb.UInt64Value `protobuf:"bytes,7,opt,name=used_slots,json=usedSlots,proto3" json:"used_slots,omitempty"`
	// Number of unique wallets in steaks. Note: filled in when request includes_stakes
	UniqUsers *wrapperspb.UInt64Value `protobuf:"bytes,8,opt,name=uniq_users,json=uniqUsers,proto3" json:"uniq_users,omitempty"`
	// Smallest steak size. Note: filled in when request includes_stakes
	MinStake *wrapperspb.StringValue `protobuf:"bytes,9,opt,name=min_stake,json=minStake,proto3" json:"min_stake,omitempty"`
	// List of stakes. Note: filled in when request includes_stakes
	Stakes []*CandidateResponse_Stake `protobuf:"bytes,5,rep,name=stakes,proto3" json:"stakes,omitempty"`
	// Candidate status. Available values: offline = 1, online = 2
	Status uint64 `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	// Is a validator at the current height
	Validator bool `protobuf:"varint,12,opt,name=validator,proto3" json:"validator,omitempty"`
}

func (x *CandidateResponse) Reset() {
	*x = CandidateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CandidateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CandidateResponse) ProtoMessage() {}

func (x *CandidateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CandidateResponse.ProtoReflect.Descriptor instead.
func (*CandidateResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{22}
}

func (x *CandidateResponse) GetRewardAddress() string {
	if x != nil {
		return x.RewardAddress
	}
	return ""
}

func (x *CandidateResponse) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *CandidateResponse) GetControlAddress() string {
	if x != nil {
		return x.ControlAddress
	}
	return ""
}

func (x *CandidateResponse) GetTotalStake() string {
	if x != nil {
		return x.TotalStake
	}
	return ""
}

func (x *CandidateResponse) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *CandidateResponse) GetCommission() uint64 {
	if x != nil {
		return x.Commission
	}
	return 0
}

func (x *CandidateResponse) GetUsedSlots() *wrapperspb.UInt64Value {
	if x != nil {
		return x.UsedSlots
	}
	return nil
}

func (x *CandidateResponse) GetUniqUsers() *wrapperspb.UInt64Value {
	if x != nil {
		return x.UniqUsers
	}
	return nil
}

func (x *CandidateResponse) GetMinStake() *wrapperspb.StringValue {
	if x != nil {
		return x.MinStake
	}
	return nil
}

func (x *CandidateResponse) GetStakes() []*CandidateResponse_Stake {
	if x != nil {
		return x.Stakes
	}
	return nil
}

func (x *CandidateResponse) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CandidateResponse) GetValidator() bool {
	if x != nil {
		return x.Validator
	}
	return false
}

type CandidatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Blockchain state height for the current request. Optional, the last default state of the node is used
	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	// Calculate field values used_slots, uniq_users, min_stake
	IncludeStakes bool `protobuf:"varint,2,opt,name=include_stakes,json=includeStakes,proto3" json:"include_stakes,omitempty"`
	// Do not display the list of stakes, the include_stakes flag is also required to display. Note: used_slots, uniq_users, min_stake will still be filled if include_stakes flag is used
	NotShowStakes bool                              `protobuf:"varint,4,opt,name=not_show_stakes,json=notShowStakes,proto3" json:"not_show_stakes,omitempty"`
	Status        CandidatesRequest_CandidateStatus `protobuf:"varint,3,opt,name=status,proto3,enum=api_pb.CandidatesRequest_CandidateStatus" json:"status,omitempty"`
}

func (x *CandidatesRequest) Reset() {
	*x = CandidatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CandidatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CandidatesRequest) ProtoMessage() {}

func (x *CandidatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CandidatesRequest.ProtoReflect.Descriptor instead.
func (*CandidatesRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{23}
}

func (x *CandidatesRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *CandidatesRequest) GetIncludeStakes() bool {
	if x != nil {
		return x.IncludeStakes
	}
	return false
}

func (x *CandidatesRequest) GetNotShowStakes() bool {
	if x != nil {
		return x.NotShowStakes
	}
	return false
}

func (x *CandidatesRequest) GetStatus() CandidatesRequest_CandidateStatus {
	if x != nil {
		return x.Status
	}
	return CandidatesRequest_all
}

type CandidatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Candidates []*CandidateResponse `protobuf:"bytes,3,rep,name=candidates,proto3" json:"candidates,omitempty"`
}

func (x *CandidatesResponse) Reset() {
	*x = CandidatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CandidatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CandidatesResponse) ProtoMessage() {}

func (x *CandidatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CandidatesResponse.ProtoReflect.Descriptor instead.
func (*CandidatesResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{24}
}

func (x *CandidatesResponse) GetCandidates() []*CandidateResponse {
	if x != nil {
		return x.Candidates
	}
	return nil
}

type CoinIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Id     uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CoinIdRequest) Reset() {
	*x = CoinIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinIdRequest) ProtoMessage() {}

func (x *CoinIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinIdRequest.ProtoReflect.Descriptor instead.
func (*CoinIdRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{25}
}

func (x *CoinIdRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *CoinIdRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CoinInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Symbol string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
}

func (x *CoinInfoRequest) Reset() {
	*x = CoinInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinInfoRequest) ProtoMessage() {}

func (x *CoinInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinInfoRequest.ProtoReflect.Descriptor instead.
func (*CoinInfoRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{26}
}

func (x *CoinInfoRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *CoinInfoRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type CoinInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64                  `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Symbol         string                  `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Volume         string                  `protobuf:"bytes,3,opt,name=volume,proto3" json:"volume,omitempty"`
	Crr            uint64                  `protobuf:"varint,4,opt,name=crr,proto3" json:"crr,omitempty"`
	ReserveBalance string                  `protobuf:"bytes,5,opt,name=reserve_balance,json=reserveBalance,proto3" json:"reserve_balance,omitempty"`
	MaxSupply      string                  `protobuf:"bytes,8,opt,name=max_supply,json=maxSupply,proto3" json:"max_supply,omitempty"`
	OwnerAddress   *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
}

func (x *CoinInfoResponse) Reset() {
	*x = CoinInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinInfoResponse) ProtoMessage() {}

func (x *CoinInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinInfoResponse.ProtoReflect.Descriptor instead.
func (*CoinInfoResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{27}
}

func (x *CoinInfoResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CoinInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CoinInfoResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CoinInfoResponse) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *CoinInfoResponse) GetCrr() uint64 {
	if x != nil {
		return x.Crr
	}
	return 0
}

func (x *CoinInfoResponse) GetReserveBalance() string {
	if x != nil {
		return x.ReserveBalance
	}
	return ""
}

func (x *CoinInfoResponse) GetMaxSupply() string {
	if x != nil {
		return x.MaxSupply
	}
	return ""
}

func (x *CoinInfoResponse) GetOwnerAddress() *wrapperspb.StringValue {
	if x != nil {
		return x.OwnerAddress
	}
	return nil
}

type SendTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Log  string `protobuf:"bytes,3,opt,name=log,proto3" json:"log,omitempty"`
	Hash string `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *SendTransactionResponse) Reset() {
	*x = SendTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTransactionResponse) ProtoMessage() {}

func (x *SendTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTransactionResponse.ProtoReflect.Descriptor instead.
func (*SendTransactionResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{28}
}

func (x *SendTransactionResponse) GetCode() uint64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SendTransactionResponse) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *SendTransactionResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type SendTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx string `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *SendTransactionRequest) Reset() {
	*x = SendTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTransactionRequest) ProtoMessage() {}

func (x *SendTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTransactionRequest.ProtoReflect.Descriptor instead.
func (*SendTransactionRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{29}
}

func (x *SendTransactionRequest) GetTx() string {
	if x != nil {
		return x.Tx
	}
	return ""
}

type TransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash     string            `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	RawTx    string            `protobuf:"bytes,2,opt,name=raw_tx,json=rawTx,proto3" json:"raw_tx,omitempty"`
	Height   uint64            `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Index    uint64            `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"`
	From     string            `protobuf:"bytes,5,opt,name=from,proto3" json:"from,omitempty"`
	Nonce    uint64            `protobuf:"varint,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Gas      uint64            `protobuf:"varint,7,opt,name=gas,proto3" json:"gas,omitempty"`
	GasPrice uint64            `protobuf:"varint,8,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	GasCoin  *Coin             `protobuf:"bytes,9,opt,name=gas_coin,json=gasCoin,proto3" json:"gas_coin,omitempty"`
	Type     uint64            `protobuf:"varint,10,opt,name=type,proto3" json:"type,omitempty"`
	Data     *anypb.Any        `protobuf:"bytes,11,opt,name=data,proto3" json:"data,omitempty"`
	Payload  []byte            `protobuf:"bytes,12,opt,name=payload,proto3" json:"payload,omitempty"`
	Tags     map[string]string `protobuf:"bytes,13,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Code     uint64            `protobuf:"varint,14,opt,name=code,proto3" json:"code,omitempty"`
	Log      string            `protobuf:"bytes,15,opt,name=log,proto3" json:"log,omitempty"`
}

func (x *TransactionResponse) Reset() {
	*x = TransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionResponse) ProtoMessage() {}

func (x *TransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionResponse.ProtoReflect.Descriptor instead.
func (*TransactionResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{30}
}

func (x *TransactionResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *TransactionResponse) GetRawTx() string {
	if x != nil {
		return x.RawTx
	}
	return ""
}

func (x *TransactionResponse) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *TransactionResponse) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *TransactionResponse) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TransactionResponse) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *TransactionResponse) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *TransactionResponse) GetGasPrice() uint64 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

func (x *TransactionResponse) GetGasCoin() *Coin {
	if x != nil {
		return x.GasCoin
	}
	return nil
}

func (x *TransactionResponse) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TransactionResponse) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TransactionResponse) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TransactionResponse) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *TransactionResponse) GetCode() uint64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TransactionResponse) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

type TransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *TransactionRequest) Reset() {
	*x = TransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionRequest) ProtoMessage() {}

func (x *TransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionRequest.ProtoReflect.Descriptor instead.
func (*TransactionRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{31}
}

func (x *TransactionRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type TransactionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*TransactionResponse `protobuf:"bytes,3,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *TransactionsResponse) Reset() {
	*x = TransactionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionsResponse) ProtoMessage() {}

func (x *TransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionsResponse.ProtoReflect.Descriptor instead.
func (*TransactionsResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{32}
}

func (x *TransactionsResponse) GetTransactions() []*TransactionResponse {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type TransactionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query   string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Page    int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PerPage int32  `protobuf:"varint,3,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"`
}

func (x *TransactionsRequest) Reset() {
	*x = TransactionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionsRequest) ProtoMessage() {}

func (x *TransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionsRequest.ProtoReflect.Descriptor instead.
func (*TransactionsRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{33}
}

func (x *TransactionsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *TransactionsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *TransactionsRequest) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

type EstimateCoinBuyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Buy:
	//	*EstimateCoinBuyRequest_CoinIdToBuy
	//	*EstimateCoinBuyRequest_CoinToBuy
	Buy isEstimateCoinBuyRequest_Buy `protobuf_oneof:"buy"`
	// Types that are assignable to Sell:
	//	*EstimateCoinBuyRequest_CoinIdToSell
	//	*EstimateCoinBuyRequest_CoinToSell
	Sell       isEstimateCoinBuyRequest_Sell `protobuf_oneof:"sell"`
	ValueToBuy string                        `protobuf:"bytes,3,opt,name=value_to_buy,json=valueToBuy,proto3" json:"value_to_buy,omitempty"`
	Height     uint64                        `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *EstimateCoinBuyRequest) Reset() {
	*x = EstimateCoinBuyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateCoinBuyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateCoinBuyRequest) ProtoMessage() {}

func (x *EstimateCoinBuyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateCoinBuyRequest.ProtoReflect.Descriptor instead.
func (*EstimateCoinBuyRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{34}
}

func (m *EstimateCoinBuyRequest) GetBuy() isEstimateCoinBuyRequest_Buy {
	if m != nil {
		return m.Buy
	}
	return nil
}

func (x *EstimateCoinBuyRequest) GetCoinIdToBuy() uint64 {
	if x, ok := x.GetBuy().(*EstimateCoinBuyRequest_CoinIdToBuy); ok {
		return x.CoinIdToBuy
	}
	return 0
}

func (x *EstimateCoinBuyRequest) GetCoinToBuy() string {
	if x, ok := x.GetBuy().(*EstimateCoinBuyRequest_CoinToBuy); ok {
		return x.CoinToBuy
	}
	return ""
}

func (m *EstimateCoinBuyRequest) GetSell() isEstimateCoinBuyRequest_Sell {
	if m != nil {
		return m.Sell
	}
	return nil
}

func (x *EstimateCoinBuyRequest) GetCoinIdToSell() uint64 {
	if x, ok := x.GetSell().(*EstimateCoinBuyRequest_CoinIdToSell); ok {
		return x.CoinIdToSell
	}
	return 0
}

func (x *EstimateCoinBuyRequest) GetCoinToSell() string {
	if x, ok := x.GetSell().(*EstimateCoinBuyRequest_CoinToSell); ok {
		return x.CoinToSell
	}
	return ""
}

func (x *EstimateCoinBuyRequest) GetValueToBuy() string {
	if x != nil {
		return x.ValueToBuy
	}
	return ""
}

func (x *EstimateCoinBuyRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type isEstimateCoinBuyRequest_Buy interface {
	isEstimateCoinBuyRequest_Buy()
}

type EstimateCoinBuyRequest_CoinIdToBuy struct {
	CoinIdToBuy uint64 `protobuf:"varint,1,opt,name=coin_id_to_buy,json=coinIdToBuy,proto3,oneof"`
}

type EstimateCoinBuyRequest_CoinToBuy struct {
	CoinToBuy string `protobuf:"bytes,5,opt,name=coin_to_buy,json=coinToBuy,proto3,oneof"`
}

func (*EstimateCoinBuyRequest_CoinIdToBuy) isEstimateCoinBuyRequest_Buy() {}

func (*EstimateCoinBuyRequest_CoinToBuy) isEstimateCoinBuyRequest_Buy() {}

type isEstimateCoinBuyRequest_Sell interface {
	isEstimateCoinBuyRequest_Sell()
}

type EstimateCoinBuyRequest_CoinIdToSell struct {
	CoinIdToSell uint64 `protobuf:"varint,2,opt,name=coin_id_to_sell,json=coinIdToSell,proto3,oneof"`
}

type EstimateCoinBuyRequest_CoinToSell struct {
	CoinToSell string `protobuf:"bytes,6,opt,name=coin_to_sell,json=coinToSell,proto3,oneof"`
}

func (*EstimateCoinBuyRequest_CoinIdToSell) isEstimateCoinBuyRequest_Sell() {}

func (*EstimateCoinBuyRequest_CoinToSell) isEstimateCoinBuyRequest_Sell() {}

type EstimateCoinBuyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WillPay    string `protobuf:"bytes,1,opt,name=will_pay,json=willPay,proto3" json:"will_pay,omitempty"`
	Commission string `protobuf:"bytes,2,opt,name=commission,proto3" json:"commission,omitempty"`
}

func (x *EstimateCoinBuyResponse) Reset() {
	*x = EstimateCoinBuyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateCoinBuyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateCoinBuyResponse) ProtoMessage() {}

func (x *EstimateCoinBuyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateCoinBuyResponse.ProtoReflect.Descriptor instead.
func (*EstimateCoinBuyResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{35}
}

func (x *EstimateCoinBuyResponse) GetWillPay() string {
	if x != nil {
		return x.WillPay
	}
	return ""
}

func (x *EstimateCoinBuyResponse) GetCommission() string {
	if x != nil {
		return x.Commission
	}
	return ""
}

type EstimateCoinSellRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Buy:
	//	*EstimateCoinSellRequest_CoinIdToBuy
	//	*EstimateCoinSellRequest_CoinToBuy
	Buy isEstimateCoinSellRequest_Buy `protobuf_oneof:"buy"`
	// Types that are assignable to Sell:
	//	*EstimateCoinSellRequest_CoinIdToSell
	//	*EstimateCoinSellRequest_CoinToSell
	Sell        isEstimateCoinSellRequest_Sell `protobuf_oneof:"sell"`
	ValueToSell string                         `protobuf:"bytes,3,opt,name=value_to_sell,json=valueToSell,proto3" json:"value_to_sell,omitempty"`
	Height      uint64                         `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *EstimateCoinSellRequest) Reset() {
	*x = EstimateCoinSellRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateCoinSellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateCoinSellRequest) ProtoMessage() {}

func (x *EstimateCoinSellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateCoinSellRequest.ProtoReflect.Descriptor instead.
func (*EstimateCoinSellRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{36}
}

func (m *EstimateCoinSellRequest) GetBuy() isEstimateCoinSellRequest_Buy {
	if m != nil {
		return m.Buy
	}
	return nil
}

func (x *EstimateCoinSellRequest) GetCoinIdToBuy() uint64 {
	if x, ok := x.GetBuy().(*EstimateCoinSellRequest_CoinIdToBuy); ok {
		return x.CoinIdToBuy
	}
	return 0
}

func (x *EstimateCoinSellRequest) GetCoinToBuy() string {
	if x, ok := x.GetBuy().(*EstimateCoinSellRequest_CoinToBuy); ok {
		return x.CoinToBuy
	}
	return ""
}

func (m *EstimateCoinSellRequest) GetSell() isEstimateCoinSellRequest_Sell {
	if m != nil {
		return m.Sell
	}
	return nil
}

func (x *EstimateCoinSellRequest) GetCoinIdToSell() uint64 {
	if x, ok := x.GetSell().(*EstimateCoinSellRequest_CoinIdToSell); ok {
		return x.CoinIdToSell
	}
	return 0
}

func (x *EstimateCoinSellRequest) GetCoinToSell() string {
	if x, ok := x.GetSell().(*EstimateCoinSellRequest_CoinToSell); ok {
		return x.CoinToSell
	}
	return ""
}

func (x *EstimateCoinSellRequest) GetValueToSell() string {
	if x != nil {
		return x.ValueToSell
	}
	return ""
}

func (x *EstimateCoinSellRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type isEstimateCoinSellRequest_Buy interface {
	isEstimateCoinSellRequest_Buy()
}

type EstimateCoinSellRequest_CoinIdToBuy struct {
	CoinIdToBuy uint64 `protobuf:"varint,1,opt,name=coin_id_to_buy,json=coinIdToBuy,proto3,oneof"`
}

type EstimateCoinSellRequest_CoinToBuy struct {
	CoinToBuy string `protobuf:"bytes,5,opt,name=coin_to_buy,json=coinToBuy,proto3,oneof"`
}

func (*EstimateCoinSellRequest_CoinIdToBuy) isEstimateCoinSellRequest_Buy() {}

func (*EstimateCoinSellRequest_CoinToBuy) isEstimateCoinSellRequest_Buy() {}

type isEstimateCoinSellRequest_Sell interface {
	isEstimateCoinSellRequest_Sell()
}

type EstimateCoinSellRequest_CoinIdToSell struct {
	CoinIdToSell uint64 `protobuf:"varint,2,opt,name=coin_id_to_sell,json=coinIdToSell,proto3,oneof"`
}

type EstimateCoinSellRequest_CoinToSell struct {
	CoinToSell string `protobuf:"bytes,6,opt,name=coin_to_sell,json=coinToSell,proto3,oneof"`
}

func (*EstimateCoinSellRequest_CoinIdToSell) isEstimateCoinSellRequest_Sell() {}

func (*EstimateCoinSellRequest_CoinToSell) isEstimateCoinSellRequest_Sell() {}

type EstimateCoinSellResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WillGet    string `protobuf:"bytes,1,opt,name=will_get,json=willGet,proto3" json:"will_get,omitempty"`
	Commission string `protobuf:"bytes,2,opt,name=commission,proto3" json:"commission,omitempty"`
}

func (x *EstimateCoinSellResponse) Reset() {
	*x = EstimateCoinSellResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateCoinSellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateCoinSellResponse) ProtoMessage() {}

func (x *EstimateCoinSellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateCoinSellResponse.ProtoReflect.Descriptor instead.
func (*EstimateCoinSellResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{37}
}

func (x *EstimateCoinSellResponse) GetWillGet() string {
	if x != nil {
		return x.WillGet
	}
	return ""
}

func (x *EstimateCoinSellResponse) GetCommission() string {
	if x != nil {
		return x.Commission
	}
	return ""
}

type EstimateCoinSellAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Buy:
	//	*EstimateCoinSellAllRequest_CoinIdToBuy
	//	*EstimateCoinSellAllRequest_CoinToBuy
	Buy isEstimateCoinSellAllRequest_Buy `protobuf_oneof:"buy"`
	// Types that are assignable to Sell:
	//	*EstimateCoinSellAllRequest_CoinIdToSell
	//	*EstimateCoinSellAllRequest_CoinToSell
	Sell        isEstimateCoinSellAllRequest_Sell `protobuf_oneof:"sell"`
	ValueToSell string                            `protobuf:"bytes,3,opt,name=value_to_sell,json=valueToSell,proto3" json:"value_to_sell,omitempty"`
	GasPrice    uint64                            `protobuf:"varint,4,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	Height      uint64                            `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *EstimateCoinSellAllRequest) Reset() {
	*x = EstimateCoinSellAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateCoinSellAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateCoinSellAllRequest) ProtoMessage() {}

func (x *EstimateCoinSellAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateCoinSellAllRequest.ProtoReflect.Descriptor instead.
func (*EstimateCoinSellAllRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{38}
}

func (m *EstimateCoinSellAllRequest) GetBuy() isEstimateCoinSellAllRequest_Buy {
	if m != nil {
		return m.Buy
	}
	return nil
}

func (x *EstimateCoinSellAllRequest) GetCoinIdToBuy() uint64 {
	if x, ok := x.GetBuy().(*EstimateCoinSellAllRequest_CoinIdToBuy); ok {
		return x.CoinIdToBuy
	}
	return 0
}

func (x *EstimateCoinSellAllRequest) GetCoinToBuy() string {
	if x, ok := x.GetBuy().(*EstimateCoinSellAllRequest_CoinToBuy); ok {
		return x.CoinToBuy
	}
	return ""
}

func (m *EstimateCoinSellAllRequest) GetSell() isEstimateCoinSellAllRequest_Sell {
	if m != nil {
		return m.Sell
	}
	return nil
}

func (x *EstimateCoinSellAllRequest) GetCoinIdToSell() uint64 {
	if x, ok := x.GetSell().(*EstimateCoinSellAllRequest_CoinIdToSell); ok {
		return x.CoinIdToSell
	}
	return 0
}

func (x *EstimateCoinSellAllRequest) GetCoinToSell() string {
	if x, ok := x.GetSell().(*EstimateCoinSellAllRequest_CoinToSell); ok {
		return x.CoinToSell
	}
	return ""
}

func (x *EstimateCoinSellAllRequest) GetValueToSell() string {
	if x != nil {
		return x.ValueToSell
	}
	return ""
}

func (x *EstimateCoinSellAllRequest) GetGasPrice() uint64 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

func (x *EstimateCoinSellAllRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type isEstimateCoinSellAllRequest_Buy interface {
	isEstimateCoinSellAllRequest_Buy()
}

type EstimateCoinSellAllRequest_CoinIdToBuy struct {
	CoinIdToBuy uint64 `protobuf:"varint,1,opt,name=coin_id_to_buy,json=coinIdToBuy,proto3,oneof"`
}

type EstimateCoinSellAllRequest_CoinToBuy struct {
	CoinToBuy string `protobuf:"bytes,7,opt,name=coin_to_buy,json=coinToBuy,proto3,oneof"`
}

func (*EstimateCoinSellAllRequest_CoinIdToBuy) isEstimateCoinSellAllRequest_Buy() {}

func (*EstimateCoinSellAllRequest_CoinToBuy) isEstimateCoinSellAllRequest_Buy() {}

type isEstimateCoinSellAllRequest_Sell interface {
	isEstimateCoinSellAllRequest_Sell()
}

type EstimateCoinSellAllRequest_CoinIdToSell struct {
	CoinIdToSell uint64 `protobuf:"varint,2,opt,name=coin_id_to_sell,json=coinIdToSell,proto3,oneof"`
}

type EstimateCoinSellAllRequest_CoinToSell struct {
	CoinToSell string `protobuf:"bytes,6,opt,name=coin_to_sell,json=coinToSell,proto3,oneof"`
}

func (*EstimateCoinSellAllRequest_CoinIdToSell) isEstimateCoinSellAllRequest_Sell() {}

func (*EstimateCoinSellAllRequest_CoinToSell) isEstimateCoinSellAllRequest_Sell() {}

type EstimateCoinSellAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WillGet string `protobuf:"bytes,1,opt,name=will_get,json=willGet,proto3" json:"will_get,omitempty"`
}

func (x *EstimateCoinSellAllResponse) Reset() {
	*x = EstimateCoinSellAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateCoinSellAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateCoinSellAllResponse) ProtoMessage() {}

func (x *EstimateCoinSellAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateCoinSellAllResponse.ProtoReflect.Descriptor instead.
func (*EstimateCoinSellAllResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{39}
}

func (x *EstimateCoinSellAllResponse) GetWillGet() string {
	if x != nil {
		return x.WillGet
	}
	return ""
}

type EstimateTxCommissionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commission string `protobuf:"bytes,1,opt,name=commission,proto3" json:"commission,omitempty"`
}

func (x *EstimateTxCommissionResponse) Reset() {
	*x = EstimateTxCommissionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateTxCommissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateTxCommissionResponse) ProtoMessage() {}

func (x *EstimateTxCommissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateTxCommissionResponse.ProtoReflect.Descriptor instead.
func (*EstimateTxCommissionResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{40}
}

func (x *EstimateTxCommissionResponse) GetCommission() string {
	if x != nil {
		return x.Commission
	}
	return ""
}

type EstimateTxCommissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx     string `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	Height uint64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *EstimateTxCommissionRequest) Reset() {
	*x = EstimateTxCommissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateTxCommissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateTxCommissionRequest) ProtoMessage() {}

func (x *EstimateTxCommissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateTxCommissionRequest.ProtoReflect.Descriptor instead.
func (*EstimateTxCommissionRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{41}
}

func (x *EstimateTxCommissionRequest) GetTx() string {
	if x != nil {
		return x.Tx
	}
	return ""
}

func (x *EstimateTxCommissionRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type EventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	// Array of public keys of validators and wallet addresses of validators for filtering
	Search []string `protobuf:"bytes,2,rep,name=search,proto3" json:"search,omitempty"`
}

func (x *EventsRequest) Reset() {
	*x = EventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsRequest) ProtoMessage() {}

func (x *EventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsRequest.ProtoReflect.Descriptor instead.
func (*EventsRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{42}
}

func (x *EventsRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *EventsRequest) GetSearch() []string {
	if x != nil {
		return x.Search
	}
	return nil
}

type EventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*structpb.Struct `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *EventsResponse) Reset() {
	*x = EventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsResponse) ProtoMessage() {}

func (x *EventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsResponse.ProtoReflect.Descriptor instead.
func (*EventsResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{43}
}

func (x *EventsResponse) GetEvents() []*structpb.Struct {
	if x != nil {
		return x.Events
	}
	return nil
}

type MissedBlocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Height    uint64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *MissedBlocksRequest) Reset() {
	*x = MissedBlocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissedBlocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissedBlocksRequest) ProtoMessage() {}

func (x *MissedBlocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissedBlocksRequest.ProtoReflect.Descriptor instead.
func (*MissedBlocksRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{44}
}

func (x *MissedBlocksRequest) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *MissedBlocksRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type MissedBlocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissedBlocks      string `protobuf:"bytes,1,opt,name=missed_blocks,json=missedBlocks,proto3" json:"missed_blocks,omitempty"`
	MissedBlocksCount int64  `protobuf:"varint,2,opt,name=missed_blocks_count,json=missedBlocksCount,proto3" json:"missed_blocks_count,omitempty"`
}

func (x *MissedBlocksResponse) Reset() {
	*x = MissedBlocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissedBlocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissedBlocksResponse) ProtoMessage() {}

func (x *MissedBlocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissedBlocksResponse.ProtoReflect.Descriptor instead.
func (*MissedBlocksResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{45}
}

func (x *MissedBlocksResponse) GetMissedBlocks() string {
	if x != nil {
		return x.MissedBlocks
	}
	return ""
}

func (x *MissedBlocksResponse) GetMissedBlocksCount() int64 {
	if x != nil {
		return x.MissedBlocksCount
	}
	return 0
}

type UnconfirmedTxsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionCount  uint64   `protobuf:"varint,1,opt,name=transaction_count,json=transactionCount,proto3" json:"transaction_count,omitempty"`
	TotalTransactions uint64   `protobuf:"varint,2,opt,name=total_transactions,json=totalTransactions,proto3" json:"total_transactions,omitempty"`
	TotalBytes        uint64   `protobuf:"varint,3,opt,name=total_bytes,json=totalBytes,proto3" json:"total_bytes,omitempty"`
	Transactions      []string `protobuf:"bytes,4,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *UnconfirmedTxsResponse) Reset() {
	*x = UnconfirmedTxsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnconfirmedTxsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnconfirmedTxsResponse) ProtoMessage() {}

func (x *UnconfirmedTxsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnconfirmedTxsResponse.ProtoReflect.Descriptor instead.
func (*UnconfirmedTxsResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{46}
}

func (x *UnconfirmedTxsResponse) GetTransactionCount() uint64 {
	if x != nil {
		return x.TransactionCount
	}
	return 0
}

func (x *UnconfirmedTxsResponse) GetTotalTransactions() uint64 {
	if x != nil {
		return x.TotalTransactions
	}
	return 0
}

func (x *UnconfirmedTxsResponse) GetTotalBytes() uint64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *UnconfirmedTxsResponse) GetTransactions() []string {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type UnconfirmedTxsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *UnconfirmedTxsRequest) Reset() {
	*x = UnconfirmedTxsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnconfirmedTxsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnconfirmedTxsRequest) ProtoMessage() {}

func (x *UnconfirmedTxsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnconfirmedTxsRequest.ProtoReflect.Descriptor instead.
func (*UnconfirmedTxsRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{47}
}

func (x *UnconfirmedTxsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ValidatorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *ValidatorsRequest) Reset() {
	*x = ValidatorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorsRequest) ProtoMessage() {}

func (x *ValidatorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorsRequest.ProtoReflect.Descriptor instead.
func (*ValidatorsRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{48}
}

func (x *ValidatorsRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type ValidatorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Validators []*ValidatorsResponse_Result `protobuf:"bytes,3,rep,name=validators,proto3" json:"validators,omitempty"`
}

func (x *ValidatorsResponse) Reset() {
	*x = ValidatorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorsResponse) ProtoMessage() {}

func (x *ValidatorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorsResponse.ProtoReflect.Descriptor instead.
func (*ValidatorsResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{49}
}

func (x *ValidatorsResponse) GetValidators() []*ValidatorsResponse_Result {
	if x != nil {
		return x.Validators
	}
	return nil
}

type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{50}
}

func (x *SubscribeRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type SubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query  string                     `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Data   *structpb.Struct           `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Events []*SubscribeResponse_Event `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *SubscribeResponse) Reset() {
	*x = SubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResponse) ProtoMessage() {}

func (x *SubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResponse.ProtoReflect.Descriptor instead.
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{51}
}

func (x *SubscribeResponse) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SubscribeResponse) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SubscribeResponse) GetEvents() []*SubscribeResponse_Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type HaltsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *HaltsRequest) Reset() {
	*x = HaltsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HaltsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HaltsRequest) ProtoMessage() {}

func (x *HaltsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HaltsRequest.ProtoReflect.Descriptor instead.
func (*HaltsRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{52}
}

func (x *HaltsRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type HaltsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKeys []string `protobuf:"bytes,1,rep,name=public_keys,json=publicKeys,proto3" json:"public_keys,omitempty"`
}

func (x *HaltsResponse) Reset() {
	*x = HaltsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HaltsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HaltsResponse) ProtoMessage() {}

func (x *HaltsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HaltsResponse.ProtoReflect.Descriptor instead.
func (*HaltsResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{53}
}

func (x *HaltsResponse) GetPublicKeys() []string {
	if x != nil {
		return x.PublicKeys
	}
	return nil
}

type FrozenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string                  `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	CoinId  *wrapperspb.UInt64Value `protobuf:"bytes,2,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
}

func (x *FrozenRequest) Reset() {
	*x = FrozenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrozenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrozenRequest) ProtoMessage() {}

func (x *FrozenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrozenRequest.ProtoReflect.Descriptor instead.
func (*FrozenRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{54}
}

func (x *FrozenRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *FrozenRequest) GetCoinId() *wrapperspb.UInt64Value {
	if x != nil {
		return x.CoinId
	}
	return nil
}

type FrozenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frozen []*FrozenResponse_Frozen `protobuf:"bytes,1,rep,name=frozen,proto3" json:"frozen,omitempty"`
}

func (x *FrozenResponse) Reset() {
	*x = FrozenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrozenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrozenResponse) ProtoMessage() {}

func (x *FrozenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrozenResponse.ProtoReflect.Descriptor instead.
func (*FrozenResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{55}
}

func (x *FrozenResponse) GetFrozen() []*FrozenResponse_Frozen {
	if x != nil {
		return x.Frozen
	}
	return nil
}

type WaitListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Height    uint64 `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *WaitListRequest) Reset() {
	*x = WaitListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitListRequest) ProtoMessage() {}

func (x *WaitListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitListRequest.ProtoReflect.Descriptor instead.
func (*WaitListRequest) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{56}
}

func (x *WaitListRequest) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *WaitListRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WaitListRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type WaitListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*WaitListResponse_Wait `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *WaitListResponse) Reset() {
	*x = WaitListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitListResponse) ProtoMessage() {}

func (x *WaitListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitListResponse.ProtoReflect.Descriptor instead.
func (*WaitListResponse) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{57}
}

func (x *WaitListResponse) GetList() []*WaitListResponse_Wait {
	if x != nil {
		return x.List
	}
	return nil
}

type SendData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin  *Coin  `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
	To    string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SendData) Reset() {
	*x = SendData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendData) ProtoMessage() {}

func (x *SendData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendData.ProtoReflect.Descriptor instead.
func (*SendData) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{58}
}

func (x *SendData) GetCoin() *Coin {
	if x != nil {
		return x.Coin
	}
	return nil
}

func (x *SendData) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *SendData) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SellCoinData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinToSell        *Coin  `protobuf:"bytes,1,opt,name=coin_to_sell,json=coinToSell,proto3" json:"coin_to_sell,omitempty"`
	ValueToSell       string `protobuf:"bytes,2,opt,name=value_to_sell,json=valueToSell,proto3" json:"value_to_sell,omitempty"`
	CoinToBuy         *Coin  `protobuf:"bytes,3,opt,name=coin_to_buy,json=coinToBuy,proto3" json:"coin_to_buy,omitempty"`
	MinimumValueToBuy string `protobuf:"bytes,4,opt,name=minimum_value_to_buy,json=minimumValueToBuy,proto3" json:"minimum_value_to_buy,omitempty"`
}

func (x *SellCoinData) Reset() {
	*x = SellCoinData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SellCoinData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SellCoinData) ProtoMessage() {}

func (x *SellCoinData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SellCoinData.ProtoReflect.Descriptor instead.
func (*SellCoinData) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{59}
}

func (x *SellCoinData) GetCoinToSell() *Coin {
	if x != nil {
		return x.CoinToSell
	}
	return nil
}

func (x *SellCoinData) GetValueToSell() string {
	if x != nil {
		return x.ValueToSell
	}
	return ""
}

func (x *SellCoinData) GetCoinToBuy() *Coin {
	if x != nil {
		return x.CoinToBuy
	}
	return nil
}

func (x *SellCoinData) GetMinimumValueToBuy() string {
	if x != nil {
		return x.MinimumValueToBuy
	}
	return ""
}

type SellAllCoinData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinToSell        *Coin  `protobuf:"bytes,1,opt,name=coin_to_sell,json=coinToSell,proto3" json:"coin_to_sell,omitempty"`
	CoinToBuy         *Coin  `protobuf:"bytes,2,opt,name=coin_to_buy,json=coinToBuy,proto3" json:"coin_to_buy,omitempty"`
	MinimumValueToBuy string `protobuf:"bytes,3,opt,name=minimum_value_to_buy,json=minimumValueToBuy,proto3" json:"minimum_value_to_buy,omitempty"`
}

func (x *SellAllCoinData) Reset() {
	*x = SellAllCoinData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SellAllCoinData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SellAllCoinData) ProtoMessage() {}

func (x *SellAllCoinData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SellAllCoinData.ProtoReflect.Descriptor instead.
func (*SellAllCoinData) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{60}
}

func (x *SellAllCoinData) GetCoinToSell() *Coin {
	if x != nil {
		return x.CoinToSell
	}
	return nil
}

func (x *SellAllCoinData) GetCoinToBuy() *Coin {
	if x != nil {
		return x.CoinToBuy
	}
	return nil
}

func (x *SellAllCoinData) GetMinimumValueToBuy() string {
	if x != nil {
		return x.MinimumValueToBuy
	}
	return ""
}

type BuyCoinData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinToBuy          *Coin  `protobuf:"bytes,1,opt,name=coin_to_buy,json=coinToBuy,proto3" json:"coin_to_buy,omitempty"`
	ValueToBuy         string `protobuf:"bytes,2,opt,name=value_to_buy,json=valueToBuy,proto3" json:"value_to_buy,omitempty"`
	CoinToSell         *Coin  `protobuf:"bytes,3,opt,name=coin_to_sell,json=coinToSell,proto3" json:"coin_to_sell,omitempty"`
	MaximumValueToSell string `protobuf:"bytes,4,opt,name=maximum_value_to_sell,json=maximumValueToSell,proto3" json:"maximum_value_to_sell,omitempty"`
}

func (x *BuyCoinData) Reset() {
	*x = BuyCoinData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyCoinData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyCoinData) ProtoMessage() {}

func (x *BuyCoinData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyCoinData.ProtoReflect.Descriptor instead.
func (*BuyCoinData) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{61}
}

func (x *BuyCoinData) GetCoinToBuy() *Coin {
	if x != nil {
		return x.CoinToBuy
	}
	return nil
}

func (x *BuyCoinData) GetValueToBuy() string {
	if x != nil {
		return x.ValueToBuy
	}
	return ""
}

func (x *BuyCoinData) GetCoinToSell() *Coin {
	if x != nil {
		return x.CoinToSell
	}
	return nil
}

func (x *BuyCoinData) GetMaximumValueToSell() string {
	if x != nil {
		return x.MaximumValueToSell
	}
	return ""
}

type CreateCoinData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                 string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Symbol               string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	InitialAmount        string `protobuf:"bytes,3,opt,name=initial_amount,json=initialAmount,proto3" json:"initial_amount,omitempty"`
	InitialReserve       string `protobuf:"bytes,4,opt,name=initial_reserve,json=initialReserve,proto3" json:"initial_reserve,omitempty"`
	ConstantReserveRatio uint64 `protobuf:"varint,5,opt,name=constant_reserve_ratio,json=constantReserveRatio,proto3" json:"constant_reserve_ratio,omitempty"`
	MaxSupply            string `protobuf:"bytes,6,opt,name=max_supply,json=maxSupply,proto3" json:"max_supply,omitempty"`
}

func (x *CreateCoinData) Reset() {
	*x = CreateCoinData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCoinData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCoinData) ProtoMessage() {}

func (x *CreateCoinData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCoinData.ProtoReflect.Descriptor instead.
func (*CreateCoinData) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{62}
}

func (x *CreateCoinData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCoinData) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CreateCoinData) GetInitialAmount() string {
	if x != nil {
		return x.InitialAmount
	}
	return ""
}

func (x *CreateCoinData) GetInitialReserve() string {
	if x != nil {
		return x.InitialReserve
	}
	return ""
}

func (x *CreateCoinData) GetConstantReserveRatio() uint64 {
	if x != nil {
		return x.ConstantReserveRatio
	}
	return 0
}

func (x *CreateCoinData) GetMaxSupply() string {
	if x != nil {
		return x.MaxSupply
	}
	return ""
}

type DeclareCandidacyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address    string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PubKey     string `protobuf:"bytes,2,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	Commission uint64 `protobuf:"varint,3,opt,name=commission,proto3" json:"commission,omitempty"`
	Coin       *Coin  `protobuf:"bytes,4,opt,name=coin,proto3" json:"coin,omitempty"`
	Stake      string `protobuf:"bytes,5,opt,name=stake,proto3" json:"stake,omitempty"`
}

func (x *DeclareCandidacyData) Reset() {
	*x = DeclareCandidacyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeclareCandidacyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclareCandidacyData) ProtoMessage() {}

func (x *DeclareCandidacyData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclareCandidacyData.ProtoReflect.Descriptor instead.
func (*DeclareCandidacyData) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{63}
}

func (x *DeclareCandidacyData) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DeclareCandidacyData) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

func (x *DeclareCandidacyData) GetCommission() uint64 {
	if x != nil {
		return x.Commission
	}
	return 0
}

func (x *DeclareCandidacyData) GetCoin() *Coin {
	if x != nil {
		return x.Coin
	}
	return nil
}

func (x *DeclareCandidacyData) GetStake() string {
	if x != nil {
		return x.Stake
	}
	return ""
}

type DelegateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKey string `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	Coin   *Coin  `protobuf:"bytes,2,opt,name=coin,proto3" json:"coin,omitempty"`
	Value  string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DelegateData) Reset() {
	*x = DelegateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelegateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegateData) ProtoMessage() {}

func (x *DelegateData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelegateData.ProtoReflect.Descriptor instead.
func (*DelegateData) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{64}
}

func (x *DelegateData) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

func (x *DelegateData) GetCoin() *Coin {
	if x != nil {
		return x.Coin
	}
	return nil
}

func (x *DelegateData) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type UnbondData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKey string `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	Coin   *Coin  `protobuf:"bytes,2,opt,name=coin,proto3" json:"coin,omitempty"`
	Value  string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UnbondData) Reset() {
	*x = UnbondData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbondData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbondData) ProtoMessage() {}

func (x *UnbondData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbondData.ProtoReflect.Descriptor instead.
func (*UnbondData) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{65}
}

func (x *UnbondData) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

func (x *UnbondData) GetCoin() *Coin {
	if x != nil {
		return x.Coin
	}
	return nil
}

func (x *UnbondData) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type RedeemCheckData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawCheck string `protobuf:"bytes,1,opt,name=raw_check,json=rawCheck,proto3" json:"raw_check,omitempty"`
	Proof    string `protobuf:"bytes,2,opt,name=proof,proto3" json:"proof,omitempty"`
}

func (x *RedeemCheckData) Reset() {
	*x = RedeemCheckData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedeemCheckData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedeemCheckData) ProtoMessage() {}

func (x *RedeemCheckData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedeemCheckData.ProtoReflect.Descriptor instead.
func (*RedeemCheckData) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{66}
}

func (x *RedeemCheckData) GetRawCheck() string {
	if x != nil {
		return x.RawCheck
	}
	return ""
}

func (x *RedeemCheckData) GetProof() string {
	if x != nil {
		return x.Proof
	}
	return ""
}

type SetCandidateOnData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKey string `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
}

func (x *SetCandidateOnData) Reset() {
	*x = SetCandidateOnData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCandidateOnData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCandidateOnData) ProtoMessage() {}

func (x *SetCandidateOnData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCandidateOnData.ProtoReflect.Descriptor instead.
func (*SetCandidateOnData) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{67}
}

func (x *SetCandidateOnData) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

type SetCandidateOffData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKey string `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
}

func (x *SetCandidateOffData) Reset() {
	*x = SetCandidateOffData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCandidateOffData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCandidateOffData) ProtoMessage() {}

func (x *SetCandidateOffData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCandidateOffData.ProtoReflect.Descriptor instead.
func (*SetCandidateOffData) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{68}
}

func (x *SetCandidateOffData) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

type CreateMultisigData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threshold uint64   `protobuf:"varint,1,opt,name=threshold,proto3" json:"threshold,omitempty"`
	Weights   []uint64 `protobuf:"varint,2,rep,packed,name=weights,proto3" json:"weights,omitempty"`
	Addresses []string `protobuf:"bytes,3,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *CreateMultisigData) Reset() {
	*x = CreateMultisigData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMultisigData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMultisigData) ProtoMessage() {}

func (x *CreateMultisigData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMultisigData.ProtoReflect.Descriptor instead.
func (*CreateMultisigData) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{69}
}

func (x *CreateMultisigData) GetThreshold() uint64 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *CreateMultisigData) GetWeights() []uint64 {
	if x != nil {
		return x.Weights
	}
	return nil
}

func (x *CreateMultisigData) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type MultiSendData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SendData `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *MultiSendData) Reset() {
	*x = MultiSendData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiSendData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiSendData) ProtoMessage() {}

func (x *MultiSendData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiSendData.ProtoReflect.Descriptor instead.
func (*MultiSendData) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{70}
}

func (x *MultiSendData) GetList() []*SendData {
	if x != nil {
		return x.List
	}
	return nil
}

type EditCandidateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKey         string `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	RewardAddress  string `protobuf:"bytes,3,opt,name=reward_address,json=rewardAddress,proto3" json:"reward_address,omitempty"`
	OwnerAddress   string `protobuf:"bytes,4,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	ControlAddress string `protobuf:"bytes,5,opt,name=control_address,json=controlAddress,proto3" json:"control_address,omitempty"`
}

func (x *EditCandidateData) Reset() {
	*x = EditCandidateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditCandidateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditCandidateData) ProtoMessage() {}

func (x *EditCandidateData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditCandidateData.ProtoReflect.Descriptor instead.
func (*EditCandidateData) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{71}
}

func (x *EditCandidateData) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

func (x *EditCandidateData) GetRewardAddress() string {
	if x != nil {
		return x.RewardAddress
	}
	return ""
}

func (x *EditCandidateData) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *EditCandidateData) GetControlAddress() string {
	if x != nil {
		return x.ControlAddress
	}
	return ""
}

type SetHaltBlockData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKey string `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	Height uint64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *SetHaltBlockData) Reset() {
	*x = SetHaltBlockData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetHaltBlockData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetHaltBlockData) ProtoMessage() {}

func (x *SetHaltBlockData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetHaltBlockData.ProtoReflect.Descriptor instead.
func (*SetHaltBlockData) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{72}
}

func (x *SetHaltBlockData) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

func (x *SetHaltBlockData) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type RecreateCoinData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                 string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Symbol               string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	InitialAmount        string `protobuf:"bytes,3,opt,name=initial_amount,json=initialAmount,proto3" json:"initial_amount,omitempty"`
	InitialReserve       string `protobuf:"bytes,4,opt,name=initial_reserve,json=initialReserve,proto3" json:"initial_reserve,omitempty"`
	ConstantReserveRatio uint64 `protobuf:"varint,5,opt,name=constant_reserve_ratio,json=constantReserveRatio,proto3" json:"constant_reserve_ratio,omitempty"`
	MaxSupply            string `protobuf:"bytes,6,opt,name=max_supply,json=maxSupply,proto3" json:"max_supply,omitempty"`
}

func (x *RecreateCoinData) Reset() {
	*x = RecreateCoinData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecreateCoinData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecreateCoinData) ProtoMessage() {}

func (x *RecreateCoinData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecreateCoinData.ProtoReflect.Descriptor instead.
func (*RecreateCoinData) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{73}
}

func (x *RecreateCoinData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RecreateCoinData) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *RecreateCoinData) GetInitialAmount() string {
	if x != nil {
		return x.InitialAmount
	}
	return ""
}

func (x *RecreateCoinData) GetInitialReserve() string {
	if x != nil {
		return x.InitialReserve
	}
	return ""
}

func (x *RecreateCoinData) GetConstantReserveRatio() uint64 {
	if x != nil {
		return x.ConstantReserveRatio
	}
	return 0
}

func (x *RecreateCoinData) GetMaxSupply() string {
	if x != nil {
		return x.MaxSupply
	}
	return ""
}

type EditCoinOwnerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol   string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	NewOwner string `protobuf:"bytes,2,opt,name=new_owner,json=newOwner,proto3" json:"new_owner,omitempty"`
}

func (x *EditCoinOwnerData) Reset() {
	*x = EditCoinOwnerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditCoinOwnerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditCoinOwnerData) ProtoMessage() {}

func (x *EditCoinOwnerData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditCoinOwnerData.ProtoReflect.Descriptor instead.
func (*EditCoinOwnerData) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{74}
}

func (x *EditCoinOwnerData) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *EditCoinOwnerData) GetNewOwner() string {
	if x != nil {
		return x.NewOwner
	}
	return ""
}

type EditMultisigData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threshold uint64   `protobuf:"varint,1,opt,name=threshold,proto3" json:"threshold,omitempty"`
	Weights   []uint64 `protobuf:"varint,2,rep,packed,name=weights,proto3" json:"weights,omitempty"`
	Addresses []string `protobuf:"bytes,3,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *EditMultisigData) Reset() {
	*x = EditMultisigData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditMultisigData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditMultisigData) ProtoMessage() {}

func (x *EditMultisigData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditMultisigData.ProtoReflect.Descriptor instead.
func (*EditMultisigData) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{75}
}

func (x *EditMultisigData) GetThreshold() uint64 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *EditMultisigData) GetWeights() []uint64 {
	if x != nil {
		return x.Weights
	}
	return nil
}

func (x *EditMultisigData) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type PriceVoteData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price string `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *PriceVoteData) Reset() {
	*x = PriceVoteData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceVoteData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceVoteData) ProtoMessage() {}

func (x *PriceVoteData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceVoteData.ProtoReflect.Descriptor instead.
func (*PriceVoteData) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{76}
}

func (x *PriceVoteData) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

type EditCandidatePublicKeyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKey    string `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	NewPubKey string `protobuf:"bytes,2,opt,name=new_pub_key,json=newPubKey,proto3" json:"new_pub_key,omitempty"`
}

func (x *EditCandidatePublicKeyData) Reset() {
	*x = EditCandidatePublicKeyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditCandidatePublicKeyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditCandidatePublicKeyData) ProtoMessage() {}

func (x *EditCandidatePublicKeyData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditCandidatePublicKeyData.ProtoReflect.Descriptor instead.
func (*EditCandidatePublicKeyData) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{77}
}

func (x *EditCandidatePublicKeyData) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

func (x *EditCandidatePublicKeyData) GetNewPubKey() string {
	if x != nil {
		return x.NewPubKey
	}
	return ""
}

type PairsResponse_Pair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin0 *Coin `protobuf:"bytes,1,opt,name=coin0,proto3" json:"coin0,omitempty"`
	Coin1 *Coin `protobuf:"bytes,2,opt,name=coin1,proto3" json:"coin1,omitempty"`
}

func (x *PairsResponse_Pair) Reset() {
	*x = PairsResponse_Pair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PairsResponse_Pair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PairsResponse_Pair) ProtoMessage() {}

func (x *PairsResponse_Pair) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PairsResponse_Pair.ProtoReflect.Descriptor instead.
func (*PairsResponse_Pair) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{1, 0}
}

func (x *PairsResponse_Pair) GetCoin0() *Coin {
	if x != nil {
		return x.Coin0
	}
	return nil
}

func (x *PairsResponse_Pair) GetCoin1() *Coin {
	if x != nil {
		return x.Coin1
	}
	return nil
}

type NodeInfo_ProtocolVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	P2P   uint64 `protobuf:"varint,3,opt,name=p2p,proto3" json:"p2p,omitempty"`
	Block uint64 `protobuf:"varint,1,opt,name=block,proto3" json:"block,omitempty"`
	App   uint64 `protobuf:"varint,2,opt,name=app,proto3" json:"app,omitempty"`
}

func (x *NodeInfo_ProtocolVersion) Reset() {
	*x = NodeInfo_ProtocolVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfo_ProtocolVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo_ProtocolVersion) ProtoMessage() {}

func (x *NodeInfo_ProtocolVersion) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo_ProtocolVersion.ProtoReflect.Descriptor instead.
func (*NodeInfo_ProtocolVersion) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{6, 0}
}

func (x *NodeInfo_ProtocolVersion) GetP2P() uint64 {
	if x != nil {
		return x.P2P
	}
	return 0
}

func (x *NodeInfo_ProtocolVersion) GetBlock() uint64 {
	if x != nil {
		return x.Block
	}
	return 0
}

func (x *NodeInfo_ProtocolVersion) GetApp() uint64 {
	if x != nil {
		return x.App
	}
	return 0
}

type NodeInfo_Other struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxIndex    string `protobuf:"bytes,2,opt,name=tx_index,json=txIndex,proto3" json:"tx_index,omitempty"`
	RpcAddress string `protobuf:"bytes,1,opt,name=rpc_address,json=rpcAddress,proto3" json:"rpc_address,omitempty"`
}

func (x *NodeInfo_Other) Reset() {
	*x = NodeInfo_Other{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfo_Other) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo_Other) ProtoMessage() {}

func (x *NodeInfo_Other) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo_Other.ProtoReflect.Descriptor instead.
func (*NodeInfo_Other) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{6, 1}
}

func (x *NodeInfo_Other) GetTxIndex() string {
	if x != nil {
		return x.TxIndex
	}
	return ""
}

func (x *NodeInfo_Other) GetRpcAddress() string {
	if x != nil {
		return x.RpcAddress
	}
	return ""
}

type NetInfoResponse_Peer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unknown while client is in fast_syncing mode
	LatestBlockHeight *wrapperspb.UInt64Value                `protobuf:"bytes,5,opt,name=latest_block_height,json=latestBlockHeight,proto3" json:"latest_block_height,omitempty"`
	NodeInfo          *NodeInfo                              `protobuf:"bytes,4,opt,name=node_info,json=nodeInfo,proto3" json:"node_info,omitempty"`
	IsOutbound        bool                                   `protobuf:"varint,1,opt,name=is_outbound,json=isOutbound,proto3" json:"is_outbound,omitempty"`
	ConnectionStatus  *NetInfoResponse_Peer_ConnectionStatus `protobuf:"bytes,2,opt,name=connection_status,json=connectionStatus,proto3" json:"connection_status,omitempty"`
	RemoteIp          string                                 `protobuf:"bytes,3,opt,name=remote_ip,json=remoteIp,proto3" json:"remote_ip,omitempty"`
}

func (x *NetInfoResponse_Peer) Reset() {
	*x = NetInfoResponse_Peer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetInfoResponse_Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetInfoResponse_Peer) ProtoMessage() {}

func (x *NetInfoResponse_Peer) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetInfoResponse_Peer.ProtoReflect.Descriptor instead.
func (*NetInfoResponse_Peer) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{7, 0}
}

func (x *NetInfoResponse_Peer) GetLatestBlockHeight() *wrapperspb.UInt64Value {
	if x != nil {
		return x.LatestBlockHeight
	}
	return nil
}

func (x *NetInfoResponse_Peer) GetNodeInfo() *NodeInfo {
	if x != nil {
		return x.NodeInfo
	}
	return nil
}

func (x *NetInfoResponse_Peer) GetIsOutbound() bool {
	if x != nil {
		return x.IsOutbound
	}
	return false
}

func (x *NetInfoResponse_Peer) GetConnectionStatus() *NetInfoResponse_Peer_ConnectionStatus {
	if x != nil {
		return x.ConnectionStatus
	}
	return nil
}

func (x *NetInfoResponse_Peer) GetRemoteIp() string {
	if x != nil {
		return x.RemoteIp
	}
	return ""
}

type NetInfoResponse_Peer_ConnectionStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration    uint64                                           `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	SendMonitor *NetInfoResponse_Peer_ConnectionStatus_Monitor   `protobuf:"bytes,1,opt,name=SendMonitor,proto3" json:"SendMonitor,omitempty"`
	RecvMonitor *NetInfoResponse_Peer_ConnectionStatus_Monitor   `protobuf:"bytes,2,opt,name=RecvMonitor,proto3" json:"RecvMonitor,omitempty"`
	Channels    []*NetInfoResponse_Peer_ConnectionStatus_Channel `protobuf:"bytes,3,rep,name=channels,proto3" json:"channels,omitempty"`
}

func (x *NetInfoResponse_Peer_ConnectionStatus) Reset() {
	*x = NetInfoResponse_Peer_ConnectionStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetInfoResponse_Peer_ConnectionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetInfoResponse_Peer_ConnectionStatus) ProtoMessage() {}

func (x *NetInfoResponse_Peer_ConnectionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetInfoResponse_Peer_ConnectionStatus.ProtoReflect.Descriptor instead.
func (*NetInfoResponse_Peer_ConnectionStatus) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{7, 0, 0}
}

func (x *NetInfoResponse_Peer_ConnectionStatus) GetDuration() uint64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *NetInfoResponse_Peer_ConnectionStatus) GetSendMonitor() *NetInfoResponse_Peer_ConnectionStatus_Monitor {
	if x != nil {
		return x.SendMonitor
	}
	return nil
}

func (x *NetInfoResponse_Peer_ConnectionStatus) GetRecvMonitor() *NetInfoResponse_Peer_ConnectionStatus_Monitor {
	if x != nil {
		return x.RecvMonitor
	}
	return nil
}

func (x *NetInfoResponse_Peer_ConnectionStatus) GetChannels() []*NetInfoResponse_Peer_ConnectionStatus_Channel {
	if x != nil {
		return x.Channels
	}
	return nil
}

type NetInfoResponse_Peer_ConnectionStatus_Monitor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Active   bool   `protobuf:"varint,13,opt,name=active,proto3" json:"active,omitempty"`
	Start    string `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	Duration int64  `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Idle     int64  `protobuf:"varint,3,opt,name=idle,proto3" json:"idle,omitempty"`
	Bytes    int64  `protobuf:"varint,4,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Samples  int64  `protobuf:"varint,5,opt,name=samples,proto3" json:"samples,omitempty"`
	InstRate int64  `protobuf:"varint,6,opt,name=inst_rate,json=instRate,proto3" json:"inst_rate,omitempty"`
	CurRate  int64  `protobuf:"varint,7,opt,name=cur_rate,json=curRate,proto3" json:"cur_rate,omitempty"`
	AvgRate  int64  `protobuf:"varint,8,opt,name=avg_rate,json=avgRate,proto3" json:"avg_rate,omitempty"`
	PeakRate int64  `protobuf:"varint,9,opt,name=peak_rate,json=peakRate,proto3" json:"peak_rate,omitempty"`
	BytesRem int64  `protobuf:"varint,10,opt,name=bytes_rem,json=bytesRem,proto3" json:"bytes_rem,omitempty"`
	TimeRem  int64  `protobuf:"varint,11,opt,name=time_rem,json=timeRem,proto3" json:"time_rem,omitempty"`
	Progress uint64 `protobuf:"varint,12,opt,name=progress,proto3" json:"progress,omitempty"`
}

func (x *NetInfoResponse_Peer_ConnectionStatus_Monitor) Reset() {
	*x = NetInfoResponse_Peer_ConnectionStatus_Monitor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetInfoResponse_Peer_ConnectionStatus_Monitor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetInfoResponse_Peer_ConnectionStatus_Monitor) ProtoMessage() {}

func (x *NetInfoResponse_Peer_ConnectionStatus_Monitor) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetInfoResponse_Peer_ConnectionStatus_Monitor.ProtoReflect.Descriptor instead.
func (*NetInfoResponse_Peer_ConnectionStatus_Monitor) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{7, 0, 0, 0}
}

func (x *NetInfoResponse_Peer_ConnectionStatus_Monitor) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *NetInfoResponse_Peer_ConnectionStatus_Monitor) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *NetInfoResponse_Peer_ConnectionStatus_Monitor) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *NetInfoResponse_Peer_ConnectionStatus_Monitor) GetIdle() int64 {
	if x != nil {
		return x.Idle
	}
	return 0
}

func (x *NetInfoResponse_Peer_ConnectionStatus_Monitor) GetBytes() int64 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

func (x *NetInfoResponse_Peer_ConnectionStatus_Monitor) GetSamples() int64 {
	if x != nil {
		return x.Samples
	}
	return 0
}

func (x *NetInfoResponse_Peer_ConnectionStatus_Monitor) GetInstRate() int64 {
	if x != nil {
		return x.InstRate
	}
	return 0
}

func (x *NetInfoResponse_Peer_ConnectionStatus_Monitor) GetCurRate() int64 {
	if x != nil {
		return x.CurRate
	}
	return 0
}

func (x *NetInfoResponse_Peer_ConnectionStatus_Monitor) GetAvgRate() int64 {
	if x != nil {
		return x.AvgRate
	}
	return 0
}

func (x *NetInfoResponse_Peer_ConnectionStatus_Monitor) GetPeakRate() int64 {
	if x != nil {
		return x.PeakRate
	}
	return 0
}

func (x *NetInfoResponse_Peer_ConnectionStatus_Monitor) GetBytesRem() int64 {
	if x != nil {
		return x.BytesRem
	}
	return 0
}

func (x *NetInfoResponse_Peer_ConnectionStatus_Monitor) GetTimeRem() int64 {
	if x != nil {
		return x.TimeRem
	}
	return 0
}

func (x *NetInfoResponse_Peer_ConnectionStatus_Monitor) GetProgress() uint64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

type NetInfoResponse_Peer_ConnectionStatus_Channel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64 `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	SendQueueCapacity int64 `protobuf:"varint,1,opt,name=send_queue_capacity,json=sendQueueCapacity,proto3" json:"send_queue_capacity,omitempty"`
	SendQueueSize     int64 `protobuf:"varint,2,opt,name=send_queue_size,json=sendQueueSize,proto3" json:"send_queue_size,omitempty"`
	Priority          int64 `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	RecentlySent      int64 `protobuf:"varint,4,opt,name=recently_sent,json=recentlySent,proto3" json:"recently_sent,omitempty"`
}

func (x *NetInfoResponse_Peer_ConnectionStatus_Channel) Reset() {
	*x = NetInfoResponse_Peer_ConnectionStatus_Channel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetInfoResponse_Peer_ConnectionStatus_Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetInfoResponse_Peer_ConnectionStatus_Channel) ProtoMessage() {}

func (x *NetInfoResponse_Peer_ConnectionStatus_Channel) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetInfoResponse_Peer_ConnectionStatus_Channel.ProtoReflect.Descriptor instead.
func (*NetInfoResponse_Peer_ConnectionStatus_Channel) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{7, 0, 0, 1}
}

func (x *NetInfoResponse_Peer_ConnectionStatus_Channel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NetInfoResponse_Peer_ConnectionStatus_Channel) GetSendQueueCapacity() int64 {
	if x != nil {
		return x.SendQueueCapacity
	}
	return 0
}

func (x *NetInfoResponse_Peer_ConnectionStatus_Channel) GetSendQueueSize() int64 {
	if x != nil {
		return x.SendQueueSize
	}
	return 0
}

func (x *NetInfoResponse_Peer_ConnectionStatus_Channel) GetPriority() int64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *NetInfoResponse_Peer_ConnectionStatus_Channel) GetRecentlySent() int64 {
	if x != nil {
		return x.RecentlySent
	}
	return 0
}

type GenesisResponse_ConsensusParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block     *GenesisResponse_ConsensusParams_Block     `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	Evidence  *GenesisResponse_ConsensusParams_Evidence  `protobuf:"bytes,2,opt,name=evidence,proto3" json:"evidence,omitempty"`
	Validator *GenesisResponse_ConsensusParams_Validator `protobuf:"bytes,3,opt,name=validator,proto3" json:"validator,omitempty"`
}

func (x *GenesisResponse_ConsensusParams) Reset() {
	*x = GenesisResponse_ConsensusParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisResponse_ConsensusParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisResponse_ConsensusParams) ProtoMessage() {}

func (x *GenesisResponse_ConsensusParams) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisResponse_ConsensusParams.ProtoReflect.Descriptor instead.
func (*GenesisResponse_ConsensusParams) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{9, 0}
}

func (x *GenesisResponse_ConsensusParams) GetBlock() *GenesisResponse_ConsensusParams_Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *GenesisResponse_ConsensusParams) GetEvidence() *GenesisResponse_ConsensusParams_Evidence {
	if x != nil {
		return x.Evidence
	}
	return nil
}

func (x *GenesisResponse_ConsensusParams) GetValidator() *GenesisResponse_ConsensusParams_Validator {
	if x != nil {
		return x.Validator
	}
	return nil
}

type GenesisResponse_AppState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Note         string                                 `protobuf:"bytes,10,opt,name=note,proto3" json:"note,omitempty"`
	StartHeight  uint64                                 `protobuf:"varint,1,opt,name=start_height,json=startHeight,proto3" json:"start_height,omitempty"`
	Validators   []*GenesisResponse_AppState_Validators `protobuf:"bytes,2,rep,name=validators,proto3" json:"validators,omitempty"`
	Candidates   []*GenesisResponse_AppState_Candidate  `protobuf:"bytes,3,rep,name=candidates,proto3" json:"candidates,omitempty"`
	Coins        []*GenesisResponse_AppState_Coin       `protobuf:"bytes,5,rep,name=coins,proto3" json:"coins,omitempty"`
	FrozenFunds  []*GenesisResponse_AppState_FrozenFund `protobuf:"bytes,6,rep,name=frozen_funds,json=frozenFunds,proto3" json:"frozen_funds,omitempty"`
	Waitlist     []*GenesisResponse_AppState_Waitlist   `protobuf:"bytes,13,rep,name=waitlist,proto3" json:"waitlist,omitempty"`
	Accounts     []*GenesisResponse_AppState_Account    `protobuf:"bytes,14,rep,name=accounts,proto3" json:"accounts,omitempty"`
	HaltBlocks   []*GenesisResponse_AppState_HaltBlock  `protobuf:"bytes,12,rep,name=halt_blocks,json=haltBlocks,proto3" json:"halt_blocks,omitempty"`
	UsedChecks   []string                               `protobuf:"bytes,11,rep,name=used_checks,json=usedChecks,proto3" json:"used_checks,omitempty"`
	MaxGas       uint64                                 `protobuf:"varint,7,opt,name=max_gas,json=maxGas,proto3" json:"max_gas,omitempty"`
	TotalSlashed string                                 `protobuf:"bytes,8,opt,name=total_slashed,json=totalSlashed,proto3" json:"total_slashed,omitempty"`
}

func (x *GenesisResponse_AppState) Reset() {
	*x = GenesisResponse_AppState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisResponse_AppState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisResponse_AppState) ProtoMessage() {}

func (x *GenesisResponse_AppState) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisResponse_AppState.ProtoReflect.Descriptor instead.
func (*GenesisResponse_AppState) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{9, 1}
}

func (x *GenesisResponse_AppState) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *GenesisResponse_AppState) GetStartHeight() uint64 {
	if x != nil {
		return x.StartHeight
	}
	return 0
}

func (x *GenesisResponse_AppState) GetValidators() []*GenesisResponse_AppState_Validators {
	if x != nil {
		return x.Validators
	}
	return nil
}

func (x *GenesisResponse_AppState) GetCandidates() []*GenesisResponse_AppState_Candidate {
	if x != nil {
		return x.Candidates
	}
	return nil
}

func (x *GenesisResponse_AppState) GetCoins() []*GenesisResponse_AppState_Coin {
	if x != nil {
		return x.Coins
	}
	return nil
}

func (x *GenesisResponse_AppState) GetFrozenFunds() []*GenesisResponse_AppState_FrozenFund {
	if x != nil {
		return x.FrozenFunds
	}
	return nil
}

func (x *GenesisResponse_AppState) GetWaitlist() []*GenesisResponse_AppState_Waitlist {
	if x != nil {
		return x.Waitlist
	}
	return nil
}

func (x *GenesisResponse_AppState) GetAccounts() []*GenesisResponse_AppState_Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *GenesisResponse_AppState) GetHaltBlocks() []*GenesisResponse_AppState_HaltBlock {
	if x != nil {
		return x.HaltBlocks
	}
	return nil
}

func (x *GenesisResponse_AppState) GetUsedChecks() []string {
	if x != nil {
		return x.UsedChecks
	}
	return nil
}

func (x *GenesisResponse_AppState) GetMaxGas() uint64 {
	if x != nil {
		return x.MaxGas
	}
	return 0
}

func (x *GenesisResponse_AppState) GetTotalSlashed() string {
	if x != nil {
		return x.TotalSlashed
	}
	return ""
}

type GenesisResponse_ConsensusParams_Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxBytes   int64 `protobuf:"varint,1,opt,name=max_bytes,json=maxBytes,proto3" json:"max_bytes,omitempty"`
	MaxGas     int64 `protobuf:"varint,2,opt,name=max_gas,json=maxGas,proto3" json:"max_gas,omitempty"`
	TimeIotaMs int64 `protobuf:"varint,3,opt,name=time_iota_ms,json=timeIotaMs,proto3" json:"time_iota_ms,omitempty"`
}

func (x *GenesisResponse_ConsensusParams_Block) Reset() {
	*x = GenesisResponse_ConsensusParams_Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisResponse_ConsensusParams_Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisResponse_ConsensusParams_Block) ProtoMessage() {}

func (x *GenesisResponse_ConsensusParams_Block) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisResponse_ConsensusParams_Block.ProtoReflect.Descriptor instead.
func (*GenesisResponse_ConsensusParams_Block) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{9, 0, 0}
}

func (x *GenesisResponse_ConsensusParams_Block) GetMaxBytes() int64 {
	if x != nil {
		return x.MaxBytes
	}
	return 0
}

func (x *GenesisResponse_ConsensusParams_Block) GetMaxGas() int64 {
	if x != nil {
		return x.MaxGas
	}
	return 0
}

func (x *GenesisResponse_ConsensusParams_Block) GetTimeIotaMs() int64 {
	if x != nil {
		return x.TimeIotaMs
	}
	return 0
}

type GenesisResponse_ConsensusParams_Evidence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxAgeNumBlocks int64 `protobuf:"varint,1,opt,name=max_age_num_blocks,json=maxAgeNumBlocks,proto3" json:"max_age_num_blocks,omitempty"`
	MaxAgeDuration  int64 `protobuf:"varint,2,opt,name=max_age_duration,json=maxAgeDuration,proto3" json:"max_age_duration,omitempty"`
}

func (x *GenesisResponse_ConsensusParams_Evidence) Reset() {
	*x = GenesisResponse_ConsensusParams_Evidence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisResponse_ConsensusParams_Evidence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisResponse_ConsensusParams_Evidence) ProtoMessage() {}

func (x *GenesisResponse_ConsensusParams_Evidence) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisResponse_ConsensusParams_Evidence.ProtoReflect.Descriptor instead.
func (*GenesisResponse_ConsensusParams_Evidence) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{9, 0, 1}
}

func (x *GenesisResponse_ConsensusParams_Evidence) GetMaxAgeNumBlocks() int64 {
	if x != nil {
		return x.MaxAgeNumBlocks
	}
	return 0
}

func (x *GenesisResponse_ConsensusParams_Evidence) GetMaxAgeDuration() int64 {
	if x != nil {
		return x.MaxAgeDuration
	}
	return 0
}

type GenesisResponse_ConsensusParams_Validator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKeyTypes []string `protobuf:"bytes,1,rep,name=pub_key_types,json=pubKeyTypes,proto3" json:"pub_key_types,omitempty"`
}

func (x *GenesisResponse_ConsensusParams_Validator) Reset() {
	*x = GenesisResponse_ConsensusParams_Validator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisResponse_ConsensusParams_Validator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisResponse_ConsensusParams_Validator) ProtoMessage() {}

func (x *GenesisResponse_ConsensusParams_Validator) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisResponse_ConsensusParams_Validator.ProtoReflect.Descriptor instead.
func (*GenesisResponse_ConsensusParams_Validator) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{9, 0, 2}
}

func (x *GenesisResponse_ConsensusParams_Validator) GetPubKeyTypes() []string {
	if x != nil {
		return x.PubKeyTypes
	}
	return nil
}

type GenesisResponse_AppState_Validators struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalBipStake string `protobuf:"bytes,4,opt,name=total_bip_stake,json=totalBipStake,proto3" json:"total_bip_stake,omitempty"`
	PublicKey     string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	AccumReward   string `protobuf:"bytes,2,opt,name=accum_reward,json=accumReward,proto3" json:"accum_reward,omitempty"`
	AbsentTimes   string `protobuf:"bytes,3,opt,name=absent_times,json=absentTimes,proto3" json:"absent_times,omitempty"`
}

func (x *GenesisResponse_AppState_Validators) Reset() {
	*x = GenesisResponse_AppState_Validators{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisResponse_AppState_Validators) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisResponse_AppState_Validators) ProtoMessage() {}

func (x *GenesisResponse_AppState_Validators) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisResponse_AppState_Validators.ProtoReflect.Descriptor instead.
func (*GenesisResponse_AppState_Validators) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{9, 1, 0}
}

func (x *GenesisResponse_AppState_Validators) GetTotalBipStake() string {
	if x != nil {
		return x.TotalBipStake
	}
	return ""
}

func (x *GenesisResponse_AppState_Validators) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *GenesisResponse_AppState_Validators) GetAccumReward() string {
	if x != nil {
		return x.AccumReward
	}
	return ""
}

func (x *GenesisResponse_AppState_Validators) GetAbsentTimes() string {
	if x != nil {
		return x.AbsentTimes
	}
	return ""
}

type GenesisResponse_AppState_Candidate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64                                      `protobuf:"varint,10,opt,name=id,proto3" json:"id,omitempty"`
	RewardAddress  string                                      `protobuf:"bytes,1,opt,name=reward_address,json=rewardAddress,proto3" json:"reward_address,omitempty"`
	OwnerAddress   string                                      `protobuf:"bytes,2,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	ControlAddress string                                      `protobuf:"bytes,3,opt,name=control_address,json=controlAddress,proto3" json:"control_address,omitempty"`
	TotalBipStake  string                                      `protobuf:"bytes,4,opt,name=total_bip_stake,json=totalBipStake,proto3" json:"total_bip_stake,omitempty"`
	PublicKey      string                                      `protobuf:"bytes,5,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Commission     uint64                                      `protobuf:"varint,6,opt,name=commission,proto3" json:"commission,omitempty"`
	Stakes         []*GenesisResponse_AppState_Candidate_Stake `protobuf:"bytes,7,rep,name=stakes,proto3" json:"stakes,omitempty"`
	Updates        []*GenesisResponse_AppState_Candidate_Stake `protobuf:"bytes,8,rep,name=updates,proto3" json:"updates,omitempty"`
	Status         int64                                       `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GenesisResponse_AppState_Candidate) Reset() {
	*x = GenesisResponse_AppState_Candidate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisResponse_AppState_Candidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisResponse_AppState_Candidate) ProtoMessage() {}

func (x *GenesisResponse_AppState_Candidate) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisResponse_AppState_Candidate.ProtoReflect.Descriptor instead.
func (*GenesisResponse_AppState_Candidate) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{9, 1, 1}
}

func (x *GenesisResponse_AppState_Candidate) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GenesisResponse_AppState_Candidate) GetRewardAddress() string {
	if x != nil {
		return x.RewardAddress
	}
	return ""
}

func (x *GenesisResponse_AppState_Candidate) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *GenesisResponse_AppState_Candidate) GetControlAddress() string {
	if x != nil {
		return x.ControlAddress
	}
	return ""
}

func (x *GenesisResponse_AppState_Candidate) GetTotalBipStake() string {
	if x != nil {
		return x.TotalBipStake
	}
	return ""
}

func (x *GenesisResponse_AppState_Candidate) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *GenesisResponse_AppState_Candidate) GetCommission() uint64 {
	if x != nil {
		return x.Commission
	}
	return 0
}

func (x *GenesisResponse_AppState_Candidate) GetStakes() []*GenesisResponse_AppState_Candidate_Stake {
	if x != nil {
		return x.Stakes
	}
	return nil
}

func (x *GenesisResponse_AppState_Candidate) GetUpdates() []*GenesisResponse_AppState_Candidate_Stake {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *GenesisResponse_AppState_Candidate) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GenesisResponse_AppState_Coin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64                  `protobuf:"varint,9,opt,name=id,proto3" json:"id,omitempty"`
	Name         string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Symbol       string                  `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Volume       string                  `protobuf:"bytes,3,opt,name=volume,proto3" json:"volume,omitempty"`
	Crr          uint64                  `protobuf:"varint,4,opt,name=crr,proto3" json:"crr,omitempty"`
	Reserve      string                  `protobuf:"bytes,5,opt,name=reserve,proto3" json:"reserve,omitempty"`
	MaxSupply    string                  `protobuf:"bytes,6,opt,name=max_supply,json=maxSupply,proto3" json:"max_supply,omitempty"`
	Version      uint64                  `protobuf:"varint,7,opt,name=version,proto3" json:"version,omitempty"`
	OwnerAddress *wrapperspb.StringValue `protobuf:"bytes,8,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
}

func (x *GenesisResponse_AppState_Coin) Reset() {
	*x = GenesisResponse_AppState_Coin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisResponse_AppState_Coin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisResponse_AppState_Coin) ProtoMessage() {}

func (x *GenesisResponse_AppState_Coin) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisResponse_AppState_Coin.ProtoReflect.Descriptor instead.
func (*GenesisResponse_AppState_Coin) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{9, 1, 2}
}

func (x *GenesisResponse_AppState_Coin) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GenesisResponse_AppState_Coin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GenesisResponse_AppState_Coin) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *GenesisResponse_AppState_Coin) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *GenesisResponse_AppState_Coin) GetCrr() uint64 {
	if x != nil {
		return x.Crr
	}
	return 0
}

func (x *GenesisResponse_AppState_Coin) GetReserve() string {
	if x != nil {
		return x.Reserve
	}
	return ""
}

func (x *GenesisResponse_AppState_Coin) GetMaxSupply() string {
	if x != nil {
		return x.MaxSupply
	}
	return ""
}

func (x *GenesisResponse_AppState_Coin) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GenesisResponse_AppState_Coin) GetOwnerAddress() *wrapperspb.StringValue {
	if x != nil {
		return x.OwnerAddress
	}
	return nil
}

type GenesisResponse_AppState_FrozenFund struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height       uint64                  `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	Address      string                  `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	CandidateKey *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=candidate_key,json=candidateKey,proto3" json:"candidate_key,omitempty"`
	CandidateId  uint64                  `protobuf:"varint,6,opt,name=candidate_id,json=candidateId,proto3" json:"candidate_id,omitempty"`
	Coin         uint64                  `protobuf:"varint,3,opt,name=coin,proto3" json:"coin,omitempty"`
	Value        string                  `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GenesisResponse_AppState_FrozenFund) Reset() {
	*x = GenesisResponse_AppState_FrozenFund{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisResponse_AppState_FrozenFund) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisResponse_AppState_FrozenFund) ProtoMessage() {}

func (x *GenesisResponse_AppState_FrozenFund) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisResponse_AppState_FrozenFund.ProtoReflect.Descriptor instead.
func (*GenesisResponse_AppState_FrozenFund) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{9, 1, 3}
}

func (x *GenesisResponse_AppState_FrozenFund) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GenesisResponse_AppState_FrozenFund) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GenesisResponse_AppState_FrozenFund) GetCandidateKey() *wrapperspb.StringValue {
	if x != nil {
		return x.CandidateKey
	}
	return nil
}

func (x *GenesisResponse_AppState_FrozenFund) GetCandidateId() uint64 {
	if x != nil {
		return x.CandidateId
	}
	return 0
}

func (x *GenesisResponse_AppState_FrozenFund) GetCoin() uint64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *GenesisResponse_AppState_FrozenFund) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GenesisResponse_AppState_Waitlist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CandidateId uint64 `protobuf:"varint,1,opt,name=candidate_id,json=candidateId,proto3" json:"candidate_id,omitempty"`
	Owner       string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Coin        uint64 `protobuf:"varint,3,opt,name=coin,proto3" json:"coin,omitempty"`
	Value       string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GenesisResponse_AppState_Waitlist) Reset() {
	*x = GenesisResponse_AppState_Waitlist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisResponse_AppState_Waitlist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisResponse_AppState_Waitlist) ProtoMessage() {}

func (x *GenesisResponse_AppState_Waitlist) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisResponse_AppState_Waitlist.ProtoReflect.Descriptor instead.
func (*GenesisResponse_AppState_Waitlist) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{9, 1, 4}
}

func (x *GenesisResponse_AppState_Waitlist) GetCandidateId() uint64 {
	if x != nil {
		return x.CandidateId
	}
	return 0
}

func (x *GenesisResponse_AppState_Waitlist) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *GenesisResponse_AppState_Waitlist) GetCoin() uint64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *GenesisResponse_AppState_Waitlist) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GenesisResponse_AppState_Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address      string                                         `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Balance      []*GenesisResponse_AppState_Account_Balance    `protobuf:"bytes,2,rep,name=balance,proto3" json:"balance,omitempty"`
	Nonce        uint64                                         `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	MultisigData *GenesisResponse_AppState_Account_MultisigData `protobuf:"bytes,4,opt,name=multisig_data,json=multisigData,proto3" json:"multisig_data,omitempty"`
}

func (x *GenesisResponse_AppState_Account) Reset() {
	*x = GenesisResponse_AppState_Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisResponse_AppState_Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisResponse_AppState_Account) ProtoMessage() {}

func (x *GenesisResponse_AppState_Account) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisResponse_AppState_Account.ProtoReflect.Descriptor instead.
func (*GenesisResponse_AppState_Account) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{9, 1, 5}
}

func (x *GenesisResponse_AppState_Account) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GenesisResponse_AppState_Account) GetBalance() []*GenesisResponse_AppState_Account_Balance {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *GenesisResponse_AppState_Account) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *GenesisResponse_AppState_Account) GetMultisigData() *GenesisResponse_AppState_Account_MultisigData {
	if x != nil {
		return x.MultisigData
	}
	return nil
}

type GenesisResponse_AppState_HaltBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height       uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	CandidateKey string `protobuf:"bytes,2,opt,name=candidate_key,json=candidateKey,proto3" json:"candidate_key,omitempty"`
}

func (x *GenesisResponse_AppState_HaltBlock) Reset() {
	*x = GenesisResponse_AppState_HaltBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisResponse_AppState_HaltBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisResponse_AppState_HaltBlock) ProtoMessage() {}

func (x *GenesisResponse_AppState_HaltBlock) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisResponse_AppState_HaltBlock.ProtoReflect.Descriptor instead.
func (*GenesisResponse_AppState_HaltBlock) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{9, 1, 6}
}

func (x *GenesisResponse_AppState_HaltBlock) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GenesisResponse_AppState_HaltBlock) GetCandidateKey() string {
	if x != nil {
		return x.CandidateKey
	}
	return ""
}

type GenesisResponse_AppState_Candidate_Stake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner    string `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`
	Coin     uint64 `protobuf:"varint,1,opt,name=coin,proto3" json:"coin,omitempty"`
	Value    string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	BipValue string `protobuf:"bytes,3,opt,name=bip_value,json=bipValue,proto3" json:"bip_value,omitempty"`
}

func (x *GenesisResponse_AppState_Candidate_Stake) Reset() {
	*x = GenesisResponse_AppState_Candidate_Stake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisResponse_AppState_Candidate_Stake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisResponse_AppState_Candidate_Stake) ProtoMessage() {}

func (x *GenesisResponse_AppState_Candidate_Stake) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisResponse_AppState_Candidate_Stake.ProtoReflect.Descriptor instead.
func (*GenesisResponse_AppState_Candidate_Stake) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{9, 1, 1, 0}
}

func (x *GenesisResponse_AppState_Candidate_Stake) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *GenesisResponse_AppState_Candidate_Stake) GetCoin() uint64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *GenesisResponse_AppState_Candidate_Stake) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *GenesisResponse_AppState_Candidate_Stake) GetBipValue() string {
	if x != nil {
		return x.BipValue
	}
	return ""
}

type GenesisResponse_AppState_Account_Balance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coin  uint64 `protobuf:"varint,1,opt,name=coin,proto3" json:"coin,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GenesisResponse_AppState_Account_Balance) Reset() {
	*x = GenesisResponse_AppState_Account_Balance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisResponse_AppState_Account_Balance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisResponse_AppState_Account_Balance) ProtoMessage() {}

func (x *GenesisResponse_AppState_Account_Balance) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisResponse_AppState_Account_Balance.ProtoReflect.Descriptor instead.
func (*GenesisResponse_AppState_Account_Balance) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{9, 1, 5, 0}
}

func (x *GenesisResponse_AppState_Account_Balance) GetCoin() uint64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *GenesisResponse_AppState_Account_Balance) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GenesisResponse_AppState_Account_MultisigData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threshold uint64   `protobuf:"varint,1,opt,name=threshold,proto3" json:"threshold,omitempty"`
	Weights   []uint64 `protobuf:"varint,2,rep,packed,name=weights,proto3" json:"weights,omitempty"`
	Addresses []string `protobuf:"bytes,3,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *GenesisResponse_AppState_Account_MultisigData) Reset() {
	*x = GenesisResponse_AppState_Account_MultisigData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisResponse_AppState_Account_MultisigData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisResponse_AppState_Account_MultisigData) ProtoMessage() {}

func (x *GenesisResponse_AppState_Account_MultisigData) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisResponse_AppState_Account_MultisigData.ProtoReflect.Descriptor instead.
func (*GenesisResponse_AppState_Account_MultisigData) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{9, 1, 5, 1}
}

func (x *GenesisResponse_AppState_Account_MultisigData) GetThreshold() uint64 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *GenesisResponse_AppState_Account_MultisigData) GetWeights() []uint64 {
	if x != nil {
		return x.Weights
	}
	return nil
}

func (x *GenesisResponse_AppState_Account_MultisigData) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type BlockResponse_Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash        string            `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	RawTx       string            `protobuf:"bytes,2,opt,name=raw_tx,json=rawTx,proto3" json:"raw_tx,omitempty"`
	From        string            `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	Nonce       uint64            `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	GasPrice    uint64            `protobuf:"varint,5,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	Type        uint64            `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`
	Data        *anypb.Any        `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	Payload     []byte            `protobuf:"bytes,8,opt,name=payload,proto3" json:"payload,omitempty"`
	ServiceData []byte            `protobuf:"bytes,9,opt,name=service_data,json=serviceData,proto3" json:"service_data,omitempty"`
	Gas         uint64            `protobuf:"varint,10,opt,name=gas,proto3" json:"gas,omitempty"`
	GasCoin     *Coin             `protobuf:"bytes,11,opt,name=gas_coin,json=gasCoin,proto3" json:"gas_coin,omitempty"`
	Tags        map[string]string `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Code        uint64            `protobuf:"varint,13,opt,name=code,proto3" json:"code,omitempty"`
	Log         string            `protobuf:"bytes,14,opt,name=log,proto3" json:"log,omitempty"`
}

func (x *BlockResponse_Transaction) Reset() {
	*x = BlockResponse_Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockResponse_Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockResponse_Transaction) ProtoMessage() {}

func (x *BlockResponse_Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockResponse_Transaction.ProtoReflect.Descriptor instead.
func (*BlockResponse_Transaction) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{12, 0}
}

func (x *BlockResponse_Transaction) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *BlockResponse_Transaction) GetRawTx() string {
	if x != nil {
		return x.RawTx
	}
	return ""
}

func (x *BlockResponse_Transaction) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *BlockResponse_Transaction) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *BlockResponse_Transaction) GetGasPrice() uint64 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

func (x *BlockResponse_Transaction) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *BlockResponse_Transaction) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BlockResponse_Transaction) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *BlockResponse_Transaction) GetServiceData() []byte {
	if x != nil {
		return x.ServiceData
	}
	return nil
}

func (x *BlockResponse_Transaction) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *BlockResponse_Transaction) GetGasCoin() *Coin {
	if x != nil {
		return x.GasCoin
	}
	return nil
}

func (x *BlockResponse_Transaction) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *BlockResponse_Transaction) GetCode() uint64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BlockResponse_Transaction) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

type BlockResponse_Validator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Signed    bool   `protobuf:"varint,2,opt,name=signed,proto3" json:"signed,omitempty"`
}

func (x *BlockResponse_Validator) Reset() {
	*x = BlockResponse_Validator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockResponse_Validator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockResponse_Validator) ProtoMessage() {}

func (x *BlockResponse_Validator) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockResponse_Validator.ProtoReflect.Descriptor instead.
func (*BlockResponse_Validator) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{12, 1}
}

func (x *BlockResponse_Validator) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *BlockResponse_Validator) GetSigned() bool {
	if x != nil {
		return x.Signed
	}
	return false
}

type BlockResponse_Evidence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Evidence []*structpb.Struct `protobuf:"bytes,1,rep,name=evidence,proto3" json:"evidence,omitempty"`
}

func (x *BlockResponse_Evidence) Reset() {
	*x = BlockResponse_Evidence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockResponse_Evidence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockResponse_Evidence) ProtoMessage() {}

func (x *BlockResponse_Evidence) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockResponse_Evidence.ProtoReflect.Descriptor instead.
func (*BlockResponse_Evidence) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{12, 2}
}

func (x *BlockResponse_Evidence) GetEvidence() []*structpb.Struct {
	if x != nil {
		return x.Evidence
	}
	return nil
}

type AddressesResponse_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance []*AddressBalance `protobuf:"bytes,2,rep,name=balance,proto3" json:"balance,omitempty"`
	// Filled in when request delegated
	Delegated []*AddressDelegatedBalance `protobuf:"bytes,6,rep,name=delegated,proto3" json:"delegated,omitempty"`
	// Sum of balance and delegated by coins. Filled in when request delegated
	Total            []*AddressBalance `protobuf:"bytes,4,rep,name=total,proto3" json:"total,omitempty"`
	TransactionCount uint64            `protobuf:"varint,3,opt,name=transaction_count,json=transactionCount,proto3" json:"transaction_count,omitempty"`
	BipValue         string            `protobuf:"bytes,5,opt,name=bip_value,json=bipValue,proto3" json:"bip_value,omitempty"`
}

func (x *AddressesResponse_Result) Reset() {
	*x = AddressesResponse_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressesResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressesResponse_Result) ProtoMessage() {}

func (x *AddressesResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressesResponse_Result.ProtoReflect.Descriptor instead.
func (*AddressesResponse_Result) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{20, 0}
}

func (x *AddressesResponse_Result) GetBalance() []*AddressBalance {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *AddressesResponse_Result) GetDelegated() []*AddressDelegatedBalance {
	if x != nil {
		return x.Delegated
	}
	return nil
}

func (x *AddressesResponse_Result) GetTotal() []*AddressBalance {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *AddressesResponse_Result) GetTransactionCount() uint64 {
	if x != nil {
		return x.TransactionCount
	}
	return 0
}

func (x *AddressesResponse_Result) GetBipValue() string {
	if x != nil {
		return x.BipValue
	}
	return ""
}

type CandidateResponse_Stake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner    string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Coin     *Coin  `protobuf:"bytes,2,opt,name=coin,proto3" json:"coin,omitempty"`
	Value    string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	BipValue string `protobuf:"bytes,4,opt,name=bip_value,json=bipValue,proto3" json:"bip_value,omitempty"`
}

func (x *CandidateResponse_Stake) Reset() {
	*x = CandidateResponse_Stake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CandidateResponse_Stake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CandidateResponse_Stake) ProtoMessage() {}

func (x *CandidateResponse_Stake) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CandidateResponse_Stake.ProtoReflect.Descriptor instead.
func (*CandidateResponse_Stake) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{22, 0}
}

func (x *CandidateResponse_Stake) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *CandidateResponse_Stake) GetCoin() *Coin {
	if x != nil {
		return x.Coin
	}
	return nil
}

func (x *CandidateResponse_Stake) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CandidateResponse_Stake) GetBipValue() string {
	if x != nil {
		return x.BipValue
	}
	return ""
}

type ValidatorsResponse_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey   string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	VotingPower uint64 `protobuf:"varint,2,opt,name=voting_power,json=votingPower,proto3" json:"voting_power,omitempty"`
}

func (x *ValidatorsResponse_Result) Reset() {
	*x = ValidatorsResponse_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorsResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorsResponse_Result) ProtoMessage() {}

func (x *ValidatorsResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorsResponse_Result.ProtoReflect.Descriptor instead.
func (*ValidatorsResponse_Result) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{49, 0}
}

func (x *ValidatorsResponse_Result) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *ValidatorsResponse_Result) GetVotingPower() uint64 {
	if x != nil {
		return x.VotingPower
	}
	return 0
}

type SubscribeResponse_Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Events []string `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *SubscribeResponse_Event) Reset() {
	*x = SubscribeResponse_Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeResponse_Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResponse_Event) ProtoMessage() {}

func (x *SubscribeResponse_Event) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResponse_Event.ProtoReflect.Descriptor instead.
func (*SubscribeResponse_Event) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{51, 0}
}

func (x *SubscribeResponse_Event) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SubscribeResponse_Event) GetEvents() []string {
	if x != nil {
		return x.Events
	}
	return nil
}

type FrozenResponse_Frozen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height       uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Address      string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	CandidateKey string `protobuf:"bytes,3,opt,name=candidate_key,json=candidateKey,proto3" json:"candidate_key,omitempty"`
	Coin         *Coin  `protobuf:"bytes,4,opt,name=coin,proto3" json:"coin,omitempty"`
	Value        string `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *FrozenResponse_Frozen) Reset() {
	*x = FrozenResponse_Frozen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrozenResponse_Frozen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrozenResponse_Frozen) ProtoMessage() {}

func (x *FrozenResponse_Frozen) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrozenResponse_Frozen.ProtoReflect.Descriptor instead.
func (*FrozenResponse_Frozen) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{55, 0}
}

func (x *FrozenResponse_Frozen) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *FrozenResponse_Frozen) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *FrozenResponse_Frozen) GetCandidateKey() string {
	if x != nil {
		return x.CandidateKey
	}
	return ""
}

func (x *FrozenResponse_Frozen) GetCoin() *Coin {
	if x != nil {
		return x.Coin
	}
	return nil
}

func (x *FrozenResponse_Frozen) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type WaitListResponse_Wait struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Coin      *Coin  `protobuf:"bytes,1,opt,name=coin,proto3" json:"coin,omitempty"`
	Value     string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *WaitListResponse_Wait) Reset() {
	*x = WaitListResponse_Wait{}
	if protoimpl.UnsafeEnabled {
		mi := &file_resources_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitListResponse_Wait) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitListResponse_Wait) ProtoMessage() {}

func (x *WaitListResponse_Wait) ProtoReflect() protoreflect.Message {
	mi := &file_resources_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitListResponse_Wait.ProtoReflect.Descriptor instead.
func (*WaitListResponse_Wait) Descriptor() ([]byte, []int) {
	return file_resources_proto_rawDescGZIP(), []int{57, 0}
}

func (x *WaitListResponse_Wait) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *WaitListResponse_Wait) GetCoin() *Coin {
	if x != nil {
		return x.Coin
	}
	return nil
}

func (x *WaitListResponse_Wait) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_resources_proto protoreflect.FileDescriptor

var file_resources_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x51, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x3a, 0x21, 0x92, 0x41, 0x1e, 0x32, 0x1c, 0x7b, 0x22, 0x69, 0x64, 0x22, 0x3a, 0x20,
	0x22, 0x30, 0x22, 0x2c, 0x20, 0x22, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x3a, 0x20, 0x22,
	0x42, 0x49, 0x50, 0x22, 0x7d, 0x22, 0x91, 0x01, 0x0a, 0x0d, 0x50, 0x61, 0x69, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e,
	0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61,
	0x69, 0x72, 0x52, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x1a, 0x4e, 0x0a, 0x04, 0x50, 0x61, 0x69,
	0x72, 0x12, 0x22, 0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x05,
	0x63, 0x6f, 0x69, 0x6e, 0x30, 0x12, 0x22, 0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x31, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x69, 0x6e, 0x52, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x31, 0x22, 0x39, 0x0a, 0x0b, 0x50, 0x61, 0x69,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e,
	0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x30, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63,
	0x6f, 0x69, 0x6e, 0x31, 0x22, 0x69, 0x0a, 0x0c, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x30,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x30,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x31, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x31, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x22,
	0x61, 0x0a, 0x17, 0x50, 0x61, 0x69, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x69, 0x6e, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x30,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x63, 0x6f, 0x69, 0x6e, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x22, 0x6c, 0x0a, 0x18, 0x50, 0x61, 0x69, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x30, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x22, 0xb2, 0x03, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4b, 0x0a,
	0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f,
	0x6e, 0x69, 0x6b, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x1a, 0x4b, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x32, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x70, 0x32, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x61, 0x70, 0x70,
	0x1a, 0x43, 0x0a, 0x05, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x78, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x78, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x70, 0x63, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x94, 0x0a, 0x0a, 0x0f, 0x4e, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70,
	0x65, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x4e,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50,
	0x65, 0x65, 0x72, 0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x1a, 0xef, 0x08, 0x0a, 0x04, 0x50,
	0x65, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x13, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07,
	0x92, 0x41, 0x04, 0x9a, 0x02, 0x01, 0x03, 0x52, 0x11, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f,
	0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x73, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x5a, 0x0a, 0x11, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x4e,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50,
	0x65, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x49, 0x70, 0x1a, 0xc6, 0x06, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x62, 0x2e, 0x4e, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x52, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x57, 0x0a,
	0x0b, 0x52, 0x65, 0x63, 0x76, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x52, 0x65, 0x63, 0x76, 0x4d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x51, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70,
	0x62, 0x2e, 0x4e, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x1a, 0xdb, 0x02, 0x0a, 0x07, 0x4d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x69,
	0x64, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x52, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x76, 0x67, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61,
	0x76, 0x67, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x61, 0x6b, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x65, 0x61, 0x6b, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x6d,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x62, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x6d,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x1a, 0xb2, 0x01, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x43, 0x61, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x65,
	0x6e, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x6c, 0x79, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x53, 0x65, 0x6e, 0x74, 0x22, 0x9c, 0x03, 0x0a,
	0x0e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x41, 0x70, 0x70, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6b,
	0x65, 0x65, 0x70, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x65, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x6c, 0x61, 0x73, 0x68,
	0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x75,
	0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x55, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0xc5, 0x18, 0x0a, 0x0f,
	0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x52, 0x0a,
	0x10, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x48, 0x61, 0x73, 0x68, 0x12, 0x3d, 0x0a, 0x09,
	0x61, 0x70, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x08, 0x61, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0xea, 0x03, 0x0a, 0x0f,
	0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x43, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75,
	0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x4c, 0x0a, 0x08, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e,
	0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x4f, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x1a, 0x5f, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x61, 0x78, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6d, 0x61, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78,
	0x5f, 0x67, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x47,
	0x61, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6f, 0x74, 0x61, 0x5f,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6f,
	0x74, 0x61, 0x4d, 0x73, 0x1a, 0x61, 0x0a, 0x08, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x2b, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x61,
	0x78, 0x41, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x28, 0x0a,
	0x10, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x41, 0x67, 0x65, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x2f, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x75, 0x62,
	0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x1a, 0xd8, 0x12, 0x0a, 0x08, 0x41, 0x70, 0x70,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x4b, 0x0a, 0x0a,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x0a, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x4a, 0x0a, 0x0a, 0x63, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x64, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x70,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x05, 0x63, 0x6f, 0x69,
	0x6e, 0x73, 0x12, 0x4e, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x5f, 0x66, 0x75, 0x6e,
	0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x46, 0x72, 0x6f, 0x7a, 0x65,
	0x6e, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x46, 0x75, 0x6e,
	0x64, 0x73, 0x12, 0x45, 0x0a, 0x08, 0x77, 0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x70,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x08, 0x77, 0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x08, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70,
	0x69, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12,
	0x4b, 0x0a, 0x0b, 0x68, 0x61, 0x6c, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x70,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x48, 0x61, 0x6c, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x0a, 0x68, 0x61, 0x6c, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x73, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x6d, 0x61, 0x78, 0x5f, 0x67, 0x61, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x6d, 0x61, 0x78, 0x47, 0x61, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x73, 0x6c, 0x61, 0x73, 0x68, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x6c, 0x61, 0x73, 0x68, 0x65, 0x64, 0x1a, 0x99, 0x01, 0x0a, 0x0a,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x62, 0x69, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x69, 0x70, 0x53, 0x74, 0x61,
	0x6b, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x62, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x62, 0x73, 0x65,
	0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x1a, 0x8b, 0x04, 0x0a, 0x09, 0x43, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x62, 0x69, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x69, 0x70, 0x53, 0x74, 0x61,
	0x6b, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x48, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73,
	0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x6b, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61,
	0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x07,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a,
	0x64, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x63, 0x6f,
	0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69, 0x70, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x70,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x82, 0x02, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x72, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x63, 0x72, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0xce, 0x01, 0x0a, 0x0a, 0x46,
	0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x46, 0x75, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x63,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0c, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x6d, 0x0a, 0x08, 0x57,
	0x61, 0x69, 0x74, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x64, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x63, 0x6f, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xfc, 0x02, 0x0a, 0x07, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x4a, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73,
	0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x33,
	0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x1a, 0x64, 0x0a, 0x0c, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x07, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x1a, 0x48, 0x0a, 0x09, 0x48, 0x61, 0x6c,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x22, 0x39, 0x0a, 0x13, 0x4d, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x69,
	0x6e, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xd2,
	0x01, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x07, 0x92, 0x41, 0x04, 0x9a, 0x02, 0x01, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x32, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x22, 0x6d, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x10, 0x0a,
	0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x10, 0x02, 0x12, 0x08, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x65, 0x72, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x10, 0x06, 0x22, 0x88, 0x08, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x45, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70,
	0x62, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x0a,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x3a, 0x0a,
	0x08, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x08, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x73,
	0x73, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x69, 0x73, 0x73, 0x65,
	0x64, 0x1a, 0xd5, 0x03, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x61, 0x77, 0x5f, 0x74, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x77, 0x54, 0x78, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10,
	0x0a, 0x03, 0x67, 0x61, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x67, 0x61, 0x73,
	0x12, 0x27, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x69, 0x6e,
	0x52, 0x07, 0x67, 0x61, 0x73, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x3f, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67,
	0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x42, 0x0a, 0x09, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x1a, 0x3f, 0x0a,
	0x08, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x65, 0x76, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x08, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x35,
	0x0a, 0x12, 0x4d, 0x61, 0x78, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0x92, 0x41, 0x04, 0x9a, 0x02, 0x01, 0x03, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x39, 0x0a, 0x13, 0x4d, 0x61, 0x78, 0x47, 0x61, 0x73, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0d,
	0x6d, 0x61, 0x78, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x22, 0x75, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0x92, 0x41,
	0x04, 0x9a, 0x02, 0x01, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x28, 0x0a,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x42, 0x0a, 0x92, 0x41, 0x07, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x22, 0x65, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x63, 0x6f, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69, 0x70, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x9c,
	0x01, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x63, 0x6f,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69, 0x70, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x2c, 0x0a, 0x12, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x69, 0x70, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x42, 0x69, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xfa, 0x01,
	0x0a, 0x0f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x30, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x2b, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x69, 0x70, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x69, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x10, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2d, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x42, 0x0f, 0x92, 0x41, 0x0c, 0xd2, 0x01, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x1f,
	0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07,
	0x92, 0x41, 0x04, 0x9a, 0x02, 0x01, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x28, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x42, 0x0a, 0x92, 0x41, 0x07, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x22, 0xaf, 0x03, 0x0a, 0x11, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x46, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x1a, 0xf1, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x69, 0x70, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x69, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x5e, 0x0a, 0x0e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x86, 0x01, 0x0a, 0x10,
	0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12,
	0x1f, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x07, 0x92, 0x41, 0x04, 0x9a, 0x02, 0x01, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x32, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x61,
	0x6b, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x0a, 0x92, 0x41, 0x07, 0x3a, 0x05,
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x74,
	0x61, 0x6b, 0x65, 0x73, 0x22, 0x80, 0x05, 0x0a, 0x11, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x3b, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x09, 0x75, 0x73, 0x65, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x3b, 0x0a, 0x0a,
	0x75, 0x6e, 0x69, 0x71, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09,
	0x75, 0x6e, 0x69, 0x71, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x39, 0x0a, 0x09, 0x6d, 0x69, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x61,
	0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x1a, 0x72, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x04,
	0x63, 0x6f, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x69,
	0x70, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x69, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8b, 0x02, 0x0a, 0x11, 0x43, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0x92,
	0x41, 0x04, 0x9a, 0x02, 0x01, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x31,
	0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x0a, 0x92, 0x41, 0x07, 0x3a, 0x05, 0x66, 0x61, 0x6c,
	0x73, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65,
	0x73, 0x12, 0x32, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x74,
	0x61, 0x6b, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x0a, 0x92, 0x41, 0x07, 0x3a,
	0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x43,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2b, 0x0a, 0x0f, 0x43, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x61,
	0x6c, 0x6c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x6f, 0x66, 0x66, 0x10, 0x01, 0x12, 0x06, 0x0a,
	0x02, 0x6f, 0x6e, 0x10, 0x02, 0x22, 0x4f, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x73, 0x22, 0x51, 0x0a, 0x0d, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0x92, 0x41, 0x04, 0x9a, 0x02, 0x01, 0x03,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x3a, 0x0f, 0x92, 0x41, 0x0c, 0x32, 0x0a, 0x7b,
	0x22, 0x69, 0x64, 0x22, 0x3a, 0x22, 0x30, 0x22, 0x7d, 0x22, 0x4a, 0x0a, 0x0f, 0x43, 0x6f, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0x92, 0x41,
	0x04, 0x9a, 0x02, 0x01, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x9f, 0x03, 0x0a, 0x10, 0x43, 0x6f, 0x69, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x72, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x63, 0x72, 0x72,
	0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78,
	0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x61, 0x78, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x3a, 0x99, 0x01, 0x92, 0x41,
	0x95, 0x01, 0x32, 0x92, 0x01, 0x7b, 0x22, 0x69, 0x64, 0x22, 0x3a, 0x22, 0x30, 0x22, 0x2c, 0x22,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x22, 0x22, 0x2c, 0x22, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x22, 0x3a, 0x22, 0x42, 0x49, 0x50, 0x22, 0x2c, 0x22, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22,
	0x3a, 0x22, 0x30, 0x22, 0x2c, 0x22, 0x63, 0x72, 0x72, 0x22, 0x3a, 0x22, 0x30, 0x22, 0x2c, 0x22,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22,
	0x3a, 0x22, 0x30, 0x22, 0x2c, 0x22, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79,
	0x22, 0x3a, 0x22, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
	0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
	0x22, 0x2c, 0x22, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x3a, 0x6e, 0x75, 0x6c, 0x6c, 0x7d, 0x22, 0xbc, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x3a, 0x67, 0x92,
	0x41, 0x64, 0x32, 0x62, 0x7b, 0x22, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x3a, 0x22, 0x30, 0x22, 0x2c,
	0x22, 0x6c, 0x6f, 0x67, 0x22, 0x3a, 0x22, 0x22, 0x2c, 0x20, 0x22, 0x68, 0x61, 0x73, 0x68, 0x22,
	0x3a, 0x22, 0x4d, 0x74, 0x36, 0x30, 0x31, 0x39, 0x66, 0x37, 0x34, 0x30, 0x39, 0x38, 0x33, 0x64,
	0x63, 0x34, 0x33, 0x62, 0x35, 0x33, 0x65, 0x61, 0x39, 0x63, 0x33, 0x37, 0x38, 0x39, 0x31, 0x61,
	0x66, 0x30, 0x63, 0x39, 0x63, 0x65, 0x37, 0x32, 0x35, 0x31, 0x33, 0x39, 0x39, 0x65, 0x62, 0x61,
	0x61, 0x66, 0x63, 0x34, 0x65, 0x61, 0x35, 0x36, 0x64, 0x36, 0x38, 0x64, 0x36, 0x36, 0x35, 0x61,
	0x64, 0x66, 0x63, 0x62, 0x22, 0x7d, 0x22, 0x28, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x78,
	0x22, 0xe2, 0x03, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x15, 0x0a, 0x06,
	0x72, 0x61, 0x77, 0x5f, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61,
	0x77, 0x54, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67,
	0x61, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x67, 0x61, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x08, 0x67, 0x61,
	0x73, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61,
	0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x07, 0x67, 0x61, 0x73, 0x43,
	0x6f, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x39, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f,
	0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x1a, 0x37, 0x0a, 0x09,
	0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x28, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22,
	0x57, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x7c, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b,
	0x92, 0x41, 0x08, 0xd2, 0x01, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x1e, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0a, 0x92, 0x41, 0x07, 0x3a, 0x01, 0x31, 0x9a, 0x02, 0x01, 0x03, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x22, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0x92, 0x41, 0x04, 0x3a, 0x02, 0x33, 0x30, 0x52, 0x07, 0x70,
	0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x22, 0xa6, 0x02, 0x0a, 0x16, 0x45, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x75, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x5f,
	0x62, 0x75, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0x92, 0x41, 0x04, 0x9a, 0x02,
	0x01, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x54, 0x6f, 0x42, 0x75,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x75, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x6f,
	0x42, 0x75, 0x79, 0x12, 0x30, 0x0a, 0x0f, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x74,
	0x6f, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0x92, 0x41,
	0x04, 0x9a, 0x02, 0x01, 0x03, 0x48, 0x01, 0x52, 0x0c, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x54,
	0x6f, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x6f,
	0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x63,
	0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x34, 0x0a, 0x0c, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x12, 0x92, 0x41, 0x0f, 0xd2, 0x01, 0x0c, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x6f, 0x5f,
	0x62, 0x75, 0x79, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x6f, 0x42, 0x75, 0x79, 0x12,
	0x1f, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x07, 0x92, 0x41, 0x04, 0x9a, 0x02, 0x01, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x42, 0x05, 0x0a, 0x03, 0x62, 0x75, 0x79, 0x42, 0x06, 0x0a, 0x04, 0x73, 0x65, 0x6c, 0x6c, 0x22,
	0x54, 0x0a, 0x17, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x42,
	0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x69,
	0x6c, 0x6c, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x69,
	0x6c, 0x6c, 0x50, 0x61, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xaa, 0x02, 0x0a, 0x17, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x5f,
	0x62, 0x75, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0x92, 0x41, 0x04, 0x9a, 0x02,
	0x01, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x54, 0x6f, 0x42, 0x75,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x75, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x6f,
	0x42, 0x75, 0x79, 0x12, 0x30, 0x0a, 0x0f, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x74,
	0x6f, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0x92, 0x41,
	0x04, 0x9a, 0x02, 0x01, 0x03, 0x48, 0x01, 0x52, 0x0c, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x54,
	0x6f, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x6f,
	0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x63,
	0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x37, 0x0a, 0x0d, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x13, 0x92, 0x41, 0x10, 0xd2, 0x01, 0x0d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x6f,
	0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x6f, 0x53, 0x65,
	0x6c, 0x6c, 0x12, 0x1f, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x07, 0x92, 0x41, 0x04, 0x9a, 0x02, 0x01, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x42, 0x05, 0x0a, 0x03, 0x62, 0x75, 0x79, 0x42, 0x06, 0x0a, 0x04, 0x73, 0x65,
	0x6c, 0x6c, 0x22, 0x55, 0x0a, 0x18, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x69, 0x6e, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x77, 0x69, 0x6c, 0x6c, 0x5f, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x77, 0x69, 0x6c, 0x6c, 0x47, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xd6, 0x02, 0x0a, 0x1a, 0x45, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x6c, 0x6c, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6f, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x07, 0x92, 0x41, 0x04, 0x9a, 0x02, 0x01, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x69,
	0x6e, 0x49, 0x64, 0x54, 0x6f, 0x42, 0x75, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e,
	0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x09, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x42, 0x75, 0x79, 0x12, 0x30, 0x0a, 0x0f, 0x63, 0x6f,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x07, 0x92, 0x41, 0x04, 0x9a, 0x02, 0x01, 0x03, 0x48, 0x01, 0x52, 0x0c,
	0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x54, 0x6f, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x53, 0x65, 0x6c, 0x6c,
	0x12, 0x37, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x6c,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0x92, 0x41, 0x10, 0xd2, 0x01, 0x0d, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x52, 0x0b, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x54, 0x6f, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x27, 0x0a, 0x09, 0x67, 0x61, 0x73,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0a, 0x92, 0x41,
	0x07, 0x3a, 0x01, 0x31, 0x9a, 0x02, 0x01, 0x03, 0x52, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x07, 0x92, 0x41, 0x04, 0x9a, 0x02, 0x01, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x42, 0x05, 0x0a, 0x03, 0x62, 0x75, 0x79, 0x42, 0x06, 0x0a, 0x04, 0x73, 0x65,
	0x6c, 0x6c, 0x22, 0x38, 0x0a, 0x1b, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x69, 0x6e, 0x53, 0x65, 0x6c, 0x6c, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x69, 0x6c, 0x6c, 0x5f, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x69, 0x6c, 0x6c, 0x47, 0x65, 0x74, 0x22, 0x3e, 0x0a, 0x1c,
	0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x54, 0x78, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x58, 0x0a, 0x1b,
	0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x54, 0x78, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x74,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0x92, 0x41, 0x05, 0xd2, 0x01, 0x02, 0x74,
	0x78, 0x52, 0x02, 0x74, 0x78, 0x12, 0x1f, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0x92, 0x41, 0x04, 0x9a, 0x02, 0x01, 0x03, 0x52, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x48, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0x92, 0x41, 0x04, 0x9a, 0x02, 0x01, 0x03,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x22, 0x41, 0x0a, 0x0e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x55, 0x0a, 0x13, 0x4d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0x92, 0x41, 0x04, 0x9a, 0x02,
	0x01, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x6b, 0x0a, 0x14, 0x4d, 0x69,
	0x73, 0x73, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x65,
	0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x69, 0x73, 0x73, 0x65,
	0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x16, 0x55, 0x6e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x54, 0x78, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x2d, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x36, 0x0a, 0x15, 0x55, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x65, 0x64, 0x54, 0x78, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0x92, 0x41, 0x04,
	0x3a, 0x02, 0x33, 0x30, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x34, 0x0a, 0x11, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x07, 0x92, 0x41, 0x04, 0x9a, 0x02, 0x01, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x22, 0xa3, 0x01, 0x0a, 0x12, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61,
	0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x4a, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x76, 0x6f, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x22, 0x5f, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x35, 0x92, 0x41, 0x32, 0x32,
	0x28, 0x74, 0x6d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x27, 0x4e, 0x65, 0x77,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x27, 0x20, 0x6f, 0x72, 0x20, 0x74, 0x6d, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x20, 0x3d, 0x20, 0x27, 0x54, 0x78, 0x27, 0xd2, 0x01, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0xc2, 0x01, 0x0a, 0x11, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x37, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x31, 0x0a, 0x05, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x2f, 0x0a,
	0x0c, 0x48, 0x61, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0x92,
	0x41, 0x04, 0x9a, 0x02, 0x01, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x30,
	0x0a, 0x0d, 0x48, 0x61, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x73,
	0x22, 0x69, 0x0a, 0x0d, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3e, 0x0a, 0x07, 0x63,
	0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x92, 0x41, 0x04, 0x9a,
	0x02, 0x01, 0x03, 0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x22, 0xe1, 0x01, 0x0a, 0x0e,
	0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35,
	0x0a, 0x06, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x52, 0x06, 0x66,
	0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x1a, 0x97, 0x01, 0x0a, 0x06, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x64, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x69, 0x6e, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x6b, 0x0a, 0x0f, 0x57, 0x61, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0x92, 0x41, 0x04,
	0x9a, 0x02, 0x01, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xa4, 0x01, 0x0a,
	0x10, 0x57, 0x61, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x1a, 0x5d, 0x0a, 0x04, 0x57, 0x61, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x04, 0x63,
	0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x52, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x20, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x04, 0x63, 0x6f, 0x69,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x6c, 0x6c,
	0x43, 0x6f, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x0c, 0x63, 0x6f, 0x69, 0x6e,
	0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x0a, 0x63, 0x6f,
	0x69, 0x6e, 0x54, 0x6f, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x6f, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x2c, 0x0a, 0x0b,
	0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52,
	0x09, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x42, 0x75, 0x79, 0x12, 0x2f, 0x0a, 0x14, 0x6d, 0x69,
	0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x62,
	0x75, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75,
	0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x6f, 0x42, 0x75, 0x79, 0x22, 0xa0, 0x01, 0x0a, 0x0f,
	0x53, 0x65, 0x6c, 0x6c, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x2e, 0x0a, 0x0c, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x69, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x53, 0x65, 0x6c, 0x6c, 0x12,
	0x2c, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x69, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x42, 0x75, 0x79, 0x12, 0x2f, 0x0a,
	0x14, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74,
	0x6f, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x6f, 0x42, 0x75, 0x79, 0x22, 0xc0,
	0x01, 0x0a, 0x0b, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c,
	0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x69,
	0x6e, 0x52, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x42, 0x75, 0x79, 0x12, 0x20, 0x0a, 0x0c,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x6f, 0x42, 0x75, 0x79, 0x12, 0x2e,
	0x0a, 0x0c, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x69, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x31,
	0x0a, 0x15, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x74, 0x6f, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6d,
	0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x6f, 0x53, 0x65, 0x6c,
	0x6c, 0x22, 0xe1, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x12, 0x34, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x14, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x75,
	0x70, 0x70, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x22, 0xa1, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x63, 0x6c, 0x61, 0x72,
	0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x63, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65,
	0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x20, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x04, 0x63,
	0x6f, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x22, 0x5f, 0x0a, 0x0c, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x75, 0x62,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b,
	0x65, 0x79, 0x12, 0x20, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x04,
	0x63, 0x6f, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5d, 0x0a, 0x0a, 0x55, 0x6e,
	0x62, 0x6f, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65,
	0x79, 0x12, 0x20, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x04, 0x63,
	0x6f, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x44, 0x0a, 0x0f, 0x52, 0x65, 0x64,
	0x65, 0x65, 0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x61, 0x77, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x61, 0x77, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f,
	0x6f, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x22,
	0x2d, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x22, 0x2e,
	0x0a, 0x13, 0x53, 0x65, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66,
	0x66, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x22, 0x6a,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x07, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x0d, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x5f,
	0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0xa1, 0x01, 0x0a, 0x11, 0x45, 0x64, 0x69, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79,
	0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x43, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x48, 0x61, 0x6c, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x75, 0x62,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b,
	0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xe3, 0x01, 0x0a, 0x10, 0x52,
	0x65, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x61, 0x74, 0x69,
	0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79,
	0x22, 0x48, 0x0a, 0x11, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1b, 0x0a,
	0x09, 0x6e, 0x65, 0x77, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x65, 0x77, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x68, 0x0a, 0x10, 0x45, 0x64,
	0x69, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x22, 0x25, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x56, 0x6f, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x55, 0x0a, 0x1a, 0x45,
	0x64, 0x69, 0x74, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x75, 0x62,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b,
	0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x50, 0x75, 0x62, 0x4b,
	0x65, 0x79, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_resources_proto_rawDescOnce sync.Once
	file_resources_proto_rawDescData = file_resources_proto_rawDesc
)

func file_resources_proto_rawDescGZIP() []byte {
	file_resources_proto_rawDescOnce.Do(func() {
		file_resources_proto_rawDescData = protoimpl.X.CompressGZIP(file_resources_proto_rawDescData)
	})
	return file_resources_proto_rawDescData
}

var file_resources_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_resources_proto_msgTypes = make([]protoimpl.MessageInfo, 112)
var file_resources_proto_goTypes = []interface{}{
	(BlockRequest_Field)(0),                               // 0: api_pb.BlockRequest.Field
	(CandidatesRequest_CandidateStatus)(0),                // 1: api_pb.CandidatesRequest.CandidateStatus
	(*Coin)(nil),                                          // 2: api_pb.Coin
	(*PairsResponse)(nil),                                 // 3: api_pb.PairsResponse
	(*PairRequest)(nil),                                   // 4: api_pb.PairRequest
	(*PairResponse)(nil),                                  // 5: api_pb.PairResponse
	(*PairFromProviderRequest)(nil),                       // 6: api_pb.PairFromProviderRequest
	(*PairFromProviderResponse)(nil),                      // 7: api_pb.PairFromProviderResponse
	(*NodeInfo)(nil),                                      // 8: api_pb.NodeInfo
	(*NetInfoResponse)(nil),                               // 9: api_pb.NetInfoResponse
	(*StatusResponse)(nil),                                // 10: api_pb.StatusResponse
	(*GenesisResponse)(nil),                               // 11: api_pb.GenesisResponse
	(*MinGasPriceResponse)(nil),                           // 12: api_pb.MinGasPriceResponse
	(*BlockRequest)(nil),                                  // 13: api_pb.BlockRequest
	(*BlockResponse)(nil),                                 // 14: api_pb.BlockResponse
	(*MaxGasPriceRequest)(nil),                            // 15: api_pb.MaxGasPriceRequest
	(*MaxGasPriceResponse)(nil),                           // 16: api_pb.MaxGasPriceResponse
	(*AddressRequest)(nil),                                // 17: api_pb.AddressRequest
	(*AddressBalance)(nil),                                // 18: api_pb.AddressBalance
	(*AddressDelegatedBalance)(nil),                       // 19: api_pb.AddressDelegatedBalance
	(*AddressResponse)(nil),                               // 20: api_pb.AddressResponse
	(*AddressesRequest)(nil),                              // 21: api_pb.AddressesRequest
	(*AddressesResponse)(nil),                             // 22: api_pb.AddressesResponse
	(*CandidateRequest)(nil),                              // 23: api_pb.CandidateRequest
	(*CandidateResponse)(nil),                             // 24: api_pb.CandidateResponse
	(*CandidatesRequest)(nil),                             // 25: api_pb.CandidatesRequest
	(*CandidatesResponse)(nil),                            // 26: api_pb.CandidatesResponse
	(*CoinIdRequest)(nil),                                 // 27: api_pb.CoinIdRequest
	(*CoinInfoRequest)(nil),                               // 28: api_pb.CoinInfoRequest
	(*CoinInfoResponse)(nil),                              // 29: api_pb.CoinInfoResponse
	(*SendTransactionResponse)(nil),                       // 30: api_pb.SendTransactionResponse
	(*SendTransactionRequest)(nil),                        // 31: api_pb.SendTransactionRequest
	(*TransactionResponse)(nil),                           // 32: api_pb.TransactionResponse
	(*TransactionRequest)(nil),                            // 33: api_pb.TransactionRequest
	(*TransactionsResponse)(nil),                          // 34: api_pb.TransactionsResponse
	(*TransactionsRequest)(nil),                           // 35: api_pb.TransactionsRequest
	(*EstimateCoinBuyRequest)(nil),                        // 36: api_pb.EstimateCoinBuyRequest
	(*EstimateCoinBuyResponse)(nil),                       // 37: api_pb.EstimateCoinBuyResponse
	(*EstimateCoinSellRequest)(nil),                       // 38: api_pb.EstimateCoinSellRequest
	(*EstimateCoinSellResponse)(nil),                      // 39: api_pb.EstimateCoinSellResponse
	(*EstimateCoinSellAllRequest)(nil),                    // 40: api_pb.EstimateCoinSellAllRequest
	(*EstimateCoinSellAllResponse)(nil),                   // 41: api_pb.EstimateCoinSellAllResponse
	(*EstimateTxCommissionResponse)(nil),                  // 42: api_pb.EstimateTxCommissionResponse
	(*EstimateTxCommissionRequest)(nil),                   // 43: api_pb.EstimateTxCommissionRequest
	(*EventsRequest)(nil),                                 // 44: api_pb.EventsRequest
	(*EventsResponse)(nil),                                // 45: api_pb.EventsResponse
	(*MissedBlocksRequest)(nil),                           // 46: api_pb.MissedBlocksRequest
	(*MissedBlocksResponse)(nil),                          // 47: api_pb.MissedBlocksResponse
	(*UnconfirmedTxsResponse)(nil),                        // 48: api_pb.UnconfirmedTxsResponse
	(*UnconfirmedTxsRequest)(nil),                         // 49: api_pb.UnconfirmedTxsRequest
	(*ValidatorsRequest)(nil),                             // 50: api_pb.ValidatorsRequest
	(*ValidatorsResponse)(nil),                            // 51: api_pb.ValidatorsResponse
	(*SubscribeRequest)(nil),                              // 52: api_pb.SubscribeRequest
	(*SubscribeResponse)(nil),                             // 53: api_pb.SubscribeResponse
	(*HaltsRequest)(nil),                                  // 54: api_pb.HaltsRequest
	(*HaltsResponse)(nil),                                 // 55: api_pb.HaltsResponse
	(*FrozenRequest)(nil),                                 // 56: api_pb.FrozenRequest
	(*FrozenResponse)(nil),                                // 57: api_pb.FrozenResponse
	(*WaitListRequest)(nil),                               // 58: api_pb.WaitListRequest
	(*WaitListResponse)(nil),                              // 59: api_pb.WaitListResponse
	(*SendData)(nil),                                      // 60: api_pb.SendData
	(*SellCoinData)(nil),                                  // 61: api_pb.SellCoinData
	(*SellAllCoinData)(nil),                               // 62: api_pb.SellAllCoinData
	(*BuyCoinData)(nil),                                   // 63: api_pb.BuyCoinData
	(*CreateCoinData)(nil),                                // 64: api_pb.CreateCoinData
	(*DeclareCandidacyData)(nil),                          // 65: api_pb.DeclareCandidacyData
	(*DelegateData)(nil),                                  // 66: api_pb.DelegateData
	(*UnbondData)(nil),                                    // 67: api_pb.UnbondData
	(*RedeemCheckData)(nil),                               // 68: api_pb.RedeemCheckData
	(*SetCandidateOnData)(nil),                            // 69: api_pb.SetCandidateOnData
	(*SetCandidateOffData)(nil),                           // 70: api_pb.SetCandidateOffData
	(*CreateMultisigData)(nil),                            // 71: api_pb.CreateMultisigData
	(*MultiSendData)(nil),                                 // 72: api_pb.MultiSendData
	(*EditCandidateData)(nil),                             // 73: api_pb.EditCandidateData
	(*SetHaltBlockData)(nil),                              // 74: api_pb.SetHaltBlockData
	(*RecreateCoinData)(nil),                              // 75: api_pb.RecreateCoinData
	(*EditCoinOwnerData)(nil),                             // 76: api_pb.EditCoinOwnerData
	(*EditMultisigData)(nil),                              // 77: api_pb.EditMultisigData
	(*PriceVoteData)(nil),                                 // 78: api_pb.PriceVoteData
	(*EditCandidatePublicKeyData)(nil),                    // 79: api_pb.EditCandidatePublicKeyData
	(*PairsResponse_Pair)(nil),                            // 80: api_pb.PairsResponse.Pair
	(*NodeInfo_ProtocolVersion)(nil),                      // 81: api_pb.NodeInfo.ProtocolVersion
	(*NodeInfo_Other)(nil),                                // 82: api_pb.NodeInfo.Other
	(*NetInfoResponse_Peer)(nil),                          // 83: api_pb.NetInfoResponse.Peer
	(*NetInfoResponse_Peer_ConnectionStatus)(nil),         // 84: api_pb.NetInfoResponse.Peer.ConnectionStatus
	(*NetInfoResponse_Peer_ConnectionStatus_Monitor)(nil), // 85: api_pb.NetInfoResponse.Peer.ConnectionStatus.Monitor
	(*NetInfoResponse_Peer_ConnectionStatus_Channel)(nil), // 86: api_pb.NetInfoResponse.Peer.ConnectionStatus.Channel
	(*GenesisResponse_ConsensusParams)(nil),               // 87: api_pb.GenesisResponse.ConsensusParams
	(*GenesisResponse_AppState)(nil),                      // 88: api_pb.GenesisResponse.AppState
	(*GenesisResponse_ConsensusParams_Block)(nil),         // 89: api_pb.GenesisResponse.ConsensusParams.Block
	(*GenesisResponse_ConsensusParams_Evidence)(nil),      // 90: api_pb.GenesisResponse.ConsensusParams.Evidence
	(*GenesisResponse_ConsensusParams_Validator)(nil),     // 91: api_pb.GenesisResponse.ConsensusParams.Validator
	(*GenesisResponse_AppState_Validators)(nil),           // 92: api_pb.GenesisResponse.AppState.Validators
	(*GenesisResponse_AppState_Candidate)(nil),            // 93: api_pb.GenesisResponse.AppState.Candidate
	(*GenesisResponse_AppState_Coin)(nil),                 // 94: api_pb.GenesisResponse.AppState.Coin
	(*GenesisResponse_AppState_FrozenFund)(nil),           // 95: api_pb.GenesisResponse.AppState.FrozenFund
	(*GenesisResponse_AppState_Waitlist)(nil),             // 96: api_pb.GenesisResponse.AppState.Waitlist
	(*GenesisResponse_AppState_Account)(nil),              // 97: api_pb.GenesisResponse.AppState.Account
	(*GenesisResponse_AppState_HaltBlock)(nil),            // 98: api_pb.GenesisResponse.AppState.HaltBlock
	(*GenesisResponse_AppState_Candidate_Stake)(nil),      // 99: api_pb.GenesisResponse.AppState.Candidate.Stake
	(*GenesisResponse_AppState_Account_Balance)(nil),      // 100: api_pb.GenesisResponse.AppState.Account.Balance
	(*GenesisResponse_AppState_Account_MultisigData)(nil), // 101: api_pb.GenesisResponse.AppState.Account.MultisigData
	(*BlockResponse_Transaction)(nil),                     // 102: api_pb.BlockResponse.Transaction
	(*BlockResponse_Validator)(nil),                       // 103: api_pb.BlockResponse.Validator
	(*BlockResponse_Evidence)(nil),                        // 104: api_pb.BlockResponse.Evidence
	nil,                                                   // 105: api_pb.BlockResponse.Transaction.TagsEntry
	(*AddressesResponse_Result)(nil),                      // 106: api_pb.AddressesResponse.Result
	nil,                                                   // 107: api_pb.AddressesResponse.AddressesEntry
	(*CandidateResponse_Stake)(nil),                       // 108: api_pb.CandidateResponse.Stake
	nil,                                                   // 109: api_pb.TransactionResponse.TagsEntry
	(*ValidatorsResponse_Result)(nil),                     // 110: api_pb.ValidatorsResponse.Result
	(*SubscribeResponse_Event)(nil),                       // 111: api_pb.SubscribeResponse.Event
	(*FrozenResponse_Frozen)(nil),                         // 112: api_pb.FrozenResponse.Frozen
	(*WaitListResponse_Wait)(nil),                         // 113: api_pb.WaitListResponse.Wait
	(*wrapperspb.UInt64Value)(nil),                        // 114: google.protobuf.UInt64Value
	(*wrapperspb.StringValue)(nil),                        // 115: google.protobuf.StringValue
	(*anypb.Any)(nil),                                     // 116: google.protobuf.Any
	(*structpb.Struct)(nil),                               // 117: google.protobuf.Struct
}
var file_resources_proto_depIdxs = []int32{
	80,  // 0: api_pb.PairsResponse.pairs:type_name -> api_pb.PairsResponse.Pair
	81,  // 1: api_pb.NodeInfo.protocol_version:type_name -> api_pb.NodeInfo.ProtocolVersion
	82,  // 2: api_pb.NodeInfo.other:type_name -> api_pb.NodeInfo.Other
	83,  // 3: api_pb.NetInfoResponse.peers:type_name -> api_pb.NetInfoResponse.Peer
	87,  // 4: api_pb.GenesisResponse.consensus_params:type_name -> api_pb.GenesisResponse.ConsensusParams
	88,  // 5: api_pb.GenesisResponse.app_state:type_name -> api_pb.GenesisResponse.AppState
	0,   // 6: api_pb.BlockRequest.fields:type_name -> api_pb.BlockRequest.Field
	102, // 7: api_pb.BlockResponse.transactions:type_name -> api_pb.BlockResponse.Transaction
	103, // 8: api_pb.BlockResponse.validators:type_name -> api_pb.BlockResponse.Validator
	104, // 9: api_pb.BlockResponse.evidence:type_name -> api_pb.BlockResponse.Evidence
	2,   // 10: api_pb.AddressBalance.coin:type_name -> api_pb.Coin
	2,   // 11: api_pb.AddressDelegatedBalance.coin:type_name -> api_pb.Coin
	18,  // 12: api_pb.AddressResponse.balance:type_name -> api_pb.AddressBalance
	19,  // 13: api_pb.AddressResponse.delegated:type_name -> api_pb.AddressDelegatedBalance
	18,  // 14: api_pb.AddressResponse.total:type_name -> api_pb.AddressBalance
	107, // 15: api_pb.AddressesResponse.addresses:type_name -> api_pb.AddressesResponse.AddressesEntry
	114, // 16: api_pb.CandidateResponse.used_slots:type_name -> google.protobuf.UInt64Value
	114, // 17: api_pb.CandidateResponse.uniq_users:type_name -> google.protobuf.UInt64Value
	115, // 18: api_pb.CandidateResponse.min_stake:type_name -> google.protobuf.StringValue
	108, // 19: api_pb.CandidateResponse.stakes:type_name -> api_pb.CandidateResponse.Stake
	1,   // 20: api_pb.CandidatesRequest.status:type_name -> api_pb.CandidatesRequest.CandidateStatus
	24,  // 21: api_pb.CandidatesResponse.candidates:type_name -> api_pb.CandidateResponse
	115, // 22: api_pb.CoinInfoResponse.owner_address:type_name -> google.protobuf.StringValue
	2,   // 23: api_pb.TransactionResponse.gas_coin:type_name -> api_pb.Coin
	116, // 24: api_pb.TransactionResponse.data:type_name -> google.protobuf.Any
	109, // 25: api_pb.TransactionResponse.tags:type_name -> api_pb.TransactionResponse.TagsEntry
	32,  // 26: api_pb.TransactionsResponse.transactions:type_name -> api_pb.TransactionResponse
	117, // 27: api_pb.EventsResponse.events:type_name -> google.protobuf.Struct
	110, // 28: api_pb.ValidatorsResponse.validators:type_name -> api_pb.ValidatorsResponse.Result
	117, // 29: api_pb.SubscribeResponse.data:type_name -> google.protobuf.Struct
	111, // 30: api_pb.SubscribeResponse.events:type_name -> api_pb.SubscribeResponse.Event
	114, // 31: api_pb.FrozenRequest.coin_id:type_name -> google.protobuf.UInt64Value
	112, // 32: api_pb.FrozenResponse.frozen:type_name -> api_pb.FrozenResponse.Frozen
	113, // 33: api_pb.WaitListResponse.list:type_name -> api_pb.WaitListResponse.Wait
	2,   // 34: api_pb.SendData.coin:type_name -> api_pb.Coin
	2,   // 35: api_pb.SellCoinData.coin_to_sell:type_name -> api_pb.Coin
	2,   // 36: api_pb.SellCoinData.coin_to_buy:type_name -> api_pb.Coin
	2,   // 37: api_pb.SellAllCoinData.coin_to_sell:type_name -> api_pb.Coin
	2,   // 38: api_pb.SellAllCoinData.coin_to_buy:type_name -> api_pb.Coin
	2,   // 39: api_pb.BuyCoinData.coin_to_buy:type_name -> api_pb.Coin
	2,   // 40: api_pb.BuyCoinData.coin_to_sell:type_name -> api_pb.Coin
	2,   // 41: api_pb.DeclareCandidacyData.coin:type_name -> api_pb.Coin
	2,   // 42: api_pb.DelegateData.coin:type_name -> api_pb.Coin
	2,   // 43: api_pb.UnbondData.coin:type_name -> api_pb.Coin
	60,  // 44: api_pb.MultiSendData.list:type_name -> api_pb.SendData
	2,   // 45: api_pb.PairsResponse.Pair.coin0:type_name -> api_pb.Coin
	2,   // 46: api_pb.PairsResponse.Pair.coin1:type_name -> api_pb.Coin
	114, // 47: api_pb.NetInfoResponse.Peer.latest_block_height:type_name -> google.protobuf.UInt64Value
	8,   // 48: api_pb.NetInfoResponse.Peer.node_info:type_name -> api_pb.NodeInfo
	84,  // 49: api_pb.NetInfoResponse.Peer.connection_status:type_name -> api_pb.NetInfoResponse.Peer.ConnectionStatus
	85,  // 50: api_pb.NetInfoResponse.Peer.ConnectionStatus.SendMonitor:type_name -> api_pb.NetInfoResponse.Peer.ConnectionStatus.Monitor
	85,  // 51: api_pb.NetInfoResponse.Peer.ConnectionStatus.RecvMonitor:type_name -> api_pb.NetInfoResponse.Peer.ConnectionStatus.Monitor
	86,  // 52: api_pb.NetInfoResponse.Peer.ConnectionStatus.channels:type_name -> api_pb.NetInfoResponse.Peer.ConnectionStatus.Channel
	89,  // 53: api_pb.GenesisResponse.ConsensusParams.block:type_name -> api_pb.GenesisResponse.ConsensusParams.Block
	90,  // 54: api_pb.GenesisResponse.ConsensusParams.evidence:type_name -> api_pb.GenesisResponse.ConsensusParams.Evidence
	91,  // 55: api_pb.GenesisResponse.ConsensusParams.validator:type_name -> api_pb.GenesisResponse.ConsensusParams.Validator
	92,  // 56: api_pb.GenesisResponse.AppState.validators:type_name -> api_pb.GenesisResponse.AppState.Validators
	93,  // 57: api_pb.GenesisResponse.AppState.candidates:type_name -> api_pb.GenesisResponse.AppState.Candidate
	94,  // 58: api_pb.GenesisResponse.AppState.coins:type_name -> api_pb.GenesisResponse.AppState.Coin
	95,  // 59: api_pb.GenesisResponse.AppState.frozen_funds:type_name -> api_pb.GenesisResponse.AppState.FrozenFund
	96,  // 60: api_pb.GenesisResponse.AppState.waitlist:type_name -> api_pb.GenesisResponse.AppState.Waitlist
	97,  // 61: api_pb.GenesisResponse.AppState.accounts:type_name -> api_pb.GenesisResponse.AppState.Account
	98,  // 62: api_pb.GenesisResponse.AppState.halt_blocks:type_name -> api_pb.GenesisResponse.AppState.HaltBlock
	99,  // 63: api_pb.GenesisResponse.AppState.Candidate.stakes:type_name -> api_pb.GenesisResponse.AppState.Candidate.Stake
	99,  // 64: api_pb.GenesisResponse.AppState.Candidate.updates:type_name -> api_pb.GenesisResponse.AppState.Candidate.Stake
	115, // 65: api_pb.GenesisResponse.AppState.Coin.owner_address:type_name -> google.protobuf.StringValue
	115, // 66: api_pb.GenesisResponse.AppState.FrozenFund.candidate_key:type_name -> google.protobuf.StringValue
	100, // 67: api_pb.GenesisResponse.AppState.Account.balance:type_name -> api_pb.GenesisResponse.AppState.Account.Balance
	101, // 68: api_pb.GenesisResponse.AppState.Account.multisig_data:type_name -> api_pb.GenesisResponse.AppState.Account.MultisigData
	116, // 69: api_pb.BlockResponse.Transaction.data:type_name -> google.protobuf.Any
	2,   // 70: api_pb.BlockResponse.Transaction.gas_coin:type_name -> api_pb.Coin
	105, // 71: api_pb.BlockResponse.Transaction.tags:type_name -> api_pb.BlockResponse.Transaction.TagsEntry
	117, // 72: api_pb.BlockResponse.Evidence.evidence:type_name -> google.protobuf.Struct
	18,  // 73: api_pb.AddressesResponse.Result.balance:type_name -> api_pb.AddressBalance
	19,  // 74: api_pb.AddressesResponse.Result.delegated:type_name -> api_pb.AddressDelegatedBalance
	18,  // 75: api_pb.AddressesResponse.Result.total:type_name -> api_pb.AddressBalance
	106, // 76: api_pb.AddressesResponse.AddressesEntry.value:type_name -> api_pb.AddressesResponse.Result
	2,   // 77: api_pb.CandidateResponse.Stake.coin:type_name -> api_pb.Coin
	2,   // 78: api_pb.FrozenResponse.Frozen.coin:type_name -> api_pb.Coin
	2,   // 79: api_pb.WaitListResponse.Wait.coin:type_name -> api_pb.Coin
	80,  // [80:80] is the sub-list for method output_type
	80,  // [80:80] is the sub-list for method input_type
	80,  // [80:80] is the sub-list for extension type_name
	80,  // [80:80] is the sub-list for extension extendee
	0,   // [0:80] is the sub-list for field type_name
}

func init() { file_resources_proto_init() }
func file_resources_proto_init() {
	if File_resources_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_resources_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PairsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PairFromProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PairFromProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinGasPriceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxGasPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaxGasPriceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressDelegatedBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CandidateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CandidateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CandidatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CandidatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateCoinBuyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateCoinBuyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateCoinSellRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateCoinSellResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateCoinSellAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateCoinSellAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateTxCommissionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateTxCommissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissedBlocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissedBlocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnconfirmedTxsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnconfirmedTxsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HaltsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HaltsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrozenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrozenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SellCoinData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SellAllCoinData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyCoinData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCoinData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeclareCandidacyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelegateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbondData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedeemCheckData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCandidateOnData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCandidateOffData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMultisigData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiSendData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditCandidateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetHaltBlockData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecreateCoinData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditCoinOwnerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditMultisigData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceVoteData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditCandidatePublicKeyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PairsResponse_Pair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfo_ProtocolVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfo_Other); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetInfoResponse_Peer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetInfoResponse_Peer_ConnectionStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetInfoResponse_Peer_ConnectionStatus_Monitor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetInfoResponse_Peer_ConnectionStatus_Channel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisResponse_ConsensusParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisResponse_AppState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisResponse_ConsensusParams_Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisResponse_ConsensusParams_Evidence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisResponse_ConsensusParams_Validator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisResponse_AppState_Validators); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisResponse_AppState_Candidate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisResponse_AppState_Coin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisResponse_AppState_FrozenFund); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisResponse_AppState_Waitlist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisResponse_AppState_Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisResponse_AppState_HaltBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisResponse_AppState_Candidate_Stake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisResponse_AppState_Account_Balance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenesisResponse_AppState_Account_MultisigData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockResponse_Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockResponse_Validator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockResponse_Evidence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressesResponse_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CandidateResponse_Stake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorsResponse_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeResponse_Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrozenResponse_Frozen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_resources_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitListResponse_Wait); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_resources_proto_msgTypes[34].OneofWrappers = []interface{}{
		(*EstimateCoinBuyRequest_CoinIdToBuy)(nil),
		(*EstimateCoinBuyRequest_CoinToBuy)(nil),
		(*EstimateCoinBuyRequest_CoinIdToSell)(nil),
		(*EstimateCoinBuyRequest_CoinToSell)(nil),
	}
	file_resources_proto_msgTypes[36].OneofWrappers = []interface{}{
		(*EstimateCoinSellRequest_CoinIdToBuy)(nil),
		(*EstimateCoinSellRequest_CoinToBuy)(nil),
		(*EstimateCoinSellRequest_CoinIdToSell)(nil),
		(*EstimateCoinSellRequest_CoinToSell)(nil),
	}
	file_resources_proto_msgTypes[38].OneofWrappers = []interface{}{
		(*EstimateCoinSellAllRequest_CoinIdToBuy)(nil),
		(*EstimateCoinSellAllRequest_CoinToBuy)(nil),
		(*EstimateCoinSellAllRequest_CoinIdToSell)(nil),
		(*EstimateCoinSellAllRequest_CoinToSell)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_resources_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   112,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resources_proto_goTypes,
		DependencyIndexes: file_resources_proto_depIdxs,
		EnumInfos:         file_resources_proto_enumTypes,
		MessageInfos:      file_resources_proto_msgTypes,
	}.Build()
	File_resources_proto = out.File
	file_resources_proto_rawDesc = nil
	file_resources_proto_goTypes = nil
	file_resources_proto_depIdxs = nil
}
